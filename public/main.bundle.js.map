{"version":3,"sources":["/Users/shah/Developer/NGJAMAVis/src/$_lazy_route_resource lazy","/Users/shah/Developer/NGJAMAVis/src/app/app-routing.module.ts","/Users/shah/Developer/NGJAMAVis/src/app/app.component.css","/Users/shah/Developer/NGJAMAVis/src/app/app.component.html","/Users/shah/Developer/NGJAMAVis/src/app/app.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/app.module.ts","/Users/shah/Developer/NGJAMAVis/src/app/configuration.service.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/content-routing.module.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/content.module.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/cnn-explanation.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/cnn-explanation.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/et-explanation.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/et-explanation.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-parent.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-parent.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-tab-behaivor.directive.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-text-box.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-text-box.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-view.directive.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-annotated-sentence.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-annotated-sentence.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-explanation.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-explanation.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-explanation.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-explanation.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-term-row.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-term-row.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/models.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/models.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/nav.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/nav.component.html","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/nav.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/prediction-result.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/content/prediction-result.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/modules/landing/landing.component.css","/Users/shah/Developer/NGJAMAVis/src/app/modules/landing/landing.component.html","/Users/shah/Developer/NGJAMAVis/src/app/modules/landing/landing.component.ts","/Users/shah/Developer/NGJAMAVis/src/app/services/data.service.ts","/Users/shah/Developer/NGJAMAVis/src/app/services/rb-sentence-parser.service.ts","/Users/shah/Developer/NGJAMAVis/src/environments/environment.ts","/Users/shah/Developer/NGJAMAVis/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/modules/content/content.module\": [\n\t\t\"../../../../../src/app/modules/content/content.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LandingComponent } from './modules/landing/landing.component';\n\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: LandingComponent\n  },\n  {\n    path: 'content',\n  loadChildren: 'app/modules/content/content.module#ContentModule'\n  }\n];\n\n@NgModule({\n  declarations: [\n    LandingComponent\n  ],\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false\n      }\n    )\n  ],\n  providers: [],\n  bootstrap: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Study Vis';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ContentModule } from './modules/content/content.module';\n\nimport { Router } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LandingComponent } from './modules/landing/landing.component';\nimport { ExplanationParentComponent } from './modules/content/model-explanations/explanation-parent.component';\nimport { RbExplanationComponent } from './modules/content/model-explanations/rb-explanation.component';\nimport { SvmExplanationComponent } from './modules/content/model-explanations/svm-explanation.component';\nimport { EtExplanationComponent } from './modules/content/model-explanations/et-explanation.component';\nimport { CnnExplanationComponent } from './modules/content/model-explanations/cnn-explanation.component';\n\nimport { ConfigurationService } from './configuration.service';\nimport { DataService } from './services/data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    ContentModule,\n    HttpClientModule\n  ],\n  providers: [\n    ConfigurationService,\n    DataService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    RbExplanationComponent,\n    SvmExplanationComponent,\n    EtExplanationComponent,\n    CnnExplanationComponent\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/app.module.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigurationService {\n\n  productionBaseURL: string;\n  stagingBaseURL: string;\n  developmentBaseURL: string;\n  activeURL: string;\n\n  constructor() {\n    this.developmentBaseURL = 'http://localhost:5000';\n    this.productionBaseURL = 'http://ec2-34-209-125-74.us-west-2.compute.amazonaws.com:5000';\n    this.stagingBaseURL = '';\n\n    this.activeURL = '';\n  }\n\n  getActiveUrl() {\n    return this.activeURL;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/configuration.service.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NavComponent } from './nav.component';\nimport { ModelsComponent } from './models.component';\n\nconst contentRoutes: Routes = [\n  {\n    path: '',\n    component: NavComponent,\n    children: [\n      {\n        path: 'models',\n        component: ModelsComponent\n      }\n    ]\n  },\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(contentRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n  ]\n})\nexport class ContentRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/content-routing.module.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { ModelsComponent } from './models.component';\nimport { NavComponent } from './nav.component';\nimport { PredictionResultComponent } from './prediction-result.component';\nimport { ExplanationParentComponent } from './model-explanations/explanation-parent.component';\nimport { RbExplanationComponent } from './model-explanations/rb-explanation.component';\nimport { SvmExplanationComponent } from './model-explanations/svm-explanation.component';\nimport { ExplanationTextBoxComponent } from './model-explanations/explanation-text-box.component';\nimport { RbAnnotatedSentenceComponent } from './model-explanations/rb-annotated-sentence.component';\nimport { SvmTermRowComponent} from './model-explanations/svm-term-row.component';\nimport { EtExplanationComponent } from './model-explanations/et-explanation.component';\nimport { CnnExplanationComponent } from './model-explanations/cnn-explanation.component';\n\nimport { ExplanationViewDirective } from './model-explanations/explanation-view.directive';\nimport { ExplanationTabBehaivorDirective } from './model-explanations/explanation-tab-behaivor.directive';\n\nimport { ContentRoutingModule } from './content-routing.module';\n\nimport { RbSentenceParserService } from '../../services/rb-sentence-parser.service';\n\n@NgModule({\n  declarations: [\n    NavComponent,\n    ModelsComponent,\n    PredictionResultComponent,\n    ExplanationViewDirective,\n    ExplanationParentComponent,\n    RbExplanationComponent,\n    SvmExplanationComponent,\n    ExplanationTabBehaivorDirective,\n    ExplanationTextBoxComponent,\n    RbAnnotatedSentenceComponent,\n    SvmTermRowComponent,\n    EtExplanationComponent,\n    CnnExplanationComponent\n  ],\n  imports: [\n    CommonModule,\n    ContentRoutingModule,\n    FormsModule\n  ],\n  providers: [RbSentenceParserService],\n  bootstrap: []\n})\nexport class ContentModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/content.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"p {\\n  font-family: Roboto;\\n  font-size: 14pt;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/cnn-explanation.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/cnn-explanation.component.css\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\n\nimport { PredictionResponse, SvmResponse } from '../../../services/data.service';\n\n@Component({\n  selector: 'app-cnn-explanation',\n  template: `\n    <p>Convolutional Neural Networks are a sophisticated model that is commonly used in computer vision. Neural networks \n      in general are composed of several layers of computational units referred to as neurons. The mechanics of neural \n      networks are outside the scope of this explanation, however, an attempt will be made to explain the intuition \n      behind convolutional neural networks as used in NLP.<p><br>\n      <p>Unlike the SVM and ET models, the CNN model uses a representation of the text that utilizes word embeddings. \n        Word embeddings are a large collection of words, usually gathered from the internet, where each word has been \n        paired with a vector that serves as a representation of that words meaning. Thinking of each vector as a point \n        is space where its corresponding word can be found, high-quality word embeddings will place words that have \n        similar meanings near each other in space. By using word embeddings rather than words themselves the neural \n        network is able to recognize words with similar meanings as being similar.<p><br>\n      <p>To process a note, each word must be converted to its respective word embedding and then all the embeddings \n        are stacked side-by-side in a long row. It may be helpful to imagine this row of embeddings as a long, horizontal rectangle of \n        information, not unlike a long rectangular image. Using the analogy of an image, each word is a thin vertical \n        stripe in the image. You can imagine that it might be possible to identify patterns in this image where phrases \n        that have similar meaning will manifest themselves as sections in the image with similar banding. It is the job \n        of a convolutional neural networks to identify these patterns. It does so by learning what people refer to as \n        “filters” and then convolving these filters with the image. Hence the name, convolutional neural network. \n        Using our image analogy, the process of convolving image filters is analogous to holding a small image in your \n        hand whose meaning is significant and moving it around the bigger image to see where it might be found in the \n        bigger image. For example, imagine you are looking at a photo of a graduating class and you hold in your hand \n        a small photo of the face of someone you wish to find in that class. You might move the small photo around the \n        larger photo comparing the faces in the large photo to the picture you have in your hand to evaluate if you \n        had found a match. In a similar way, the CNN identifies snippets of our word embedding image that are significant \n        and then compares them to incoming images to draw conclusions about the incoming data. </p><br>\n    <p>Given the sophistication of these models their performance will be poor unless they are trained on large \n      datasets. The small size of the training dataset produced for this project may be the main reason why the neural \n      network models performed so poorly. </p>\n  `,\n  styleUrls: ['./cnn-explanation.component.css']\n})\nexport class CnnExplanationComponent implements OnInit {\n\n  private data: SvmResponse;\n  private explanationContent: string = this.getExplanationContent();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  setData(data: PredictionResponse): void {\n    this.data = data as SvmResponse;\n  }\n\n  // keep this method to be compatible with the way the other explanations are instantiated.\n  getData(): SvmResponse {\n    return this.data;\n  }\n\n  getExplanationContent(): string {\n    return `<p>The support vector machines that we trained are linear models. This means that they learn a weight for each\n    dimension of their input. In this case there are 100 input dimensions, each representing a word or phrase that\n    the model selected from the training corpus. In machine learning, each input dimension is referred to as a \"feature\".\n    The features selected by the model can be seen in the list below. Features that were assigned a positive weight are \n    highlighted in orange and features that were assigned a negative weight are highlighted in green.</p>\n    <br>\n    <p>To help the model select useful features we employed a technique known as term-frequency inverse-document-frequency \n    (TFIDF) which assigns weights to all the words in the corpus. Words that are judged to be more salient to the meaning\n    of a note are given a higher score than words which are judged to be less salient. So in addition to a model weight\n    for each feature you will also see an IDF weight.</p><br>\n    <p>To arrive at the final prediction the model counts how many times each feature appears in the note \n    (the \"Count\" column) and multiplies each count by its respective IDF score (the \"IDF Value\" column). This yields a list with 100 entries,\n    one for each feature. This list can be thought of as a 100-dimensional vector embedded in 100-dimensional space\n    (the \"Unnormalized Representation\" column. In\n    order to make the model less sensitive to note length, this vector is then normalized. That is, each entry in the vector\n    is divided by the sum of all the squared entries in the vector. This effectively shrinks the vector so that it has a length\n    of 1. The normalized values can be seen in the \"Normalized Representation Column\". Next, the normalized values are\n    each multiplied by the weights that were learned by the model (the \"Weights\" column) to give a score for each feature\n    (the \"Score\" column). All the scores are summed and the model bias is added to yield the final prediction. Prediction\n    values above 0 are interpreted as a positive prediction and values below zero are interpreted as a negative \n    prediction.</p><br>\n    <p>It is common in the machine learning domain to consider the geometric interpretation of a model in order to gain\n    some intuition about how it works. Geometrically, the features that are fed to a machine learning model can be thought\n    of as points in space. Ideally, features for a model are chosen such that similar things lie close together in that space \n    and dissimilar things lie far apart. Most \n    if not all machine learning classifiers, such as these, can be thought of as tools for learning the boundaries in \n    these spaces that separate groups of points from each other. In the case of linear classifiers, these\n    boundaries are flat surfaces, more formally known as hyperplanes. The boundaries need not be flat, however, and\n    many models exist to draw curved, non-linear boundaries, such as the extra trees and neural network models that\n    were also used in this project.</p>\n    \n    `;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/cnn-explanation.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"p {\\n  font-family: Roboto;\\n  font-size: 14pt;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/et-explanation.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/et-explanation.component.css\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\n\nimport { PredictionResponse, SvmResponse } from '../../../services/data.service';\n\n@Component({\n  selector: 'app-et-explanation',\n  template: `\n    <p>\n      The Extra Trees model is an ensemble model. This means that it is composed of many models which all process the \n      input independently and then vote on whether it is positive or negative. Specifically, each individual model in \n      the extra trees ensemble is a decision tree. Each individual decision tree in the extra trees ensemble is trained \n      using the same features that were used to train the SVM models. However, each tree is trained on a randomly \n      selected subset of the features, and in fact a random subset of the training documents. This gives each tree a \n      slightly different view of the data. These views, when combined through a vote, tend to produce a more reliable \n      prediction than any individual model. The “Extra” in extra trees is short for extremely random trees.\n    </p>\n  `,\n  styleUrls: ['./et-explanation.component.css']\n})\nexport class EtExplanationComponent implements OnInit {\n\n  private data: SvmResponse;\n  private explanationContent: string = this.getExplanationContent();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  setData(data: PredictionResponse): void {\n    this.data = data as SvmResponse;\n  }\n\n  // keep this method to be compatible with the way the other explanations are instantiated.\n  getData(): SvmResponse {\n    return this.data;\n  }\n\n  getExplanationContent(): string {\n    return `<p>The support vector machines that we trained are linear models. This means that they learn a weight for each\n    dimension of their input. In this case there are 100 input dimensions, each representing a word or phrase that\n    the model selected from the training corpus. In machine learning, each input dimension is referred to as a \"feature\".\n    The features selected by the model can be seen in the list below. Features that were assigned a positive weight are \n    highlighted in orange and features that were assigned a negative weight are highlighted in green.</p>\n    <br>\n    <p>To help the model select useful features we employed a technique known as term-frequency inverse-document-frequency \n    (TFIDF) which assigns weights to all the words in the corpus. Words that are judged to be more salient to the meaning\n    of a note are given a higher score than words which are judged to be less salient. So in addition to a model weight\n    for each feature you will also see an IDF weight.</p><br>\n    <p>To arrive at the final prediction the model counts how many times each feature appears in the note \n    (the \"Count\" column) and multiplies each count by its respective IDF score (the \"IDF Value\" column). This yields a list with 100 entries,\n    one for each feature. This list can be thought of as a 100-dimensional vector embedded in 100-dimensional space\n    (the \"Unnormalized Representation\" column. In\n    order to make the model less sensitive to note length, this vector is then normalized. That is, each entry in the vector\n    is divided by the sum of all the squared entries in the vector. This effectively shrinks the vector so that it has a length\n    of 1. The normalized values can be seen in the \"Normalized Representation Column\". Next, the normalized values are\n    each multiplied by the weights that were learned by the model (the \"Weights\" column) to give a score for each feature\n    (the \"Score\" column). All the scores are summed and the model bias is added to yield the final prediction. Prediction\n    values above 0 are interpreted as a positive prediction and values below zero are interpreted as a negative \n    prediction.</p><br>\n    <p>It is common in the machine learning domain to consider the geometric interpretation of a model in order to gain\n    some intuition about how it works. Geometrically, the features that are fed to a machine learning model can be thought\n    of as points in space. Ideally, features for a model are chosen such that similar things lie close together in that space \n    and dissimilar things lie far apart. Most \n    if not all machine learning classifiers, such as these, can be thought of as tools for learning the boundaries in \n    these spaces that separate groups of points from each other. In the case of linear classifiers, these\n    boundaries are flat surfaces, more formally known as hyperplanes. The boundaries need not be flat, however, and\n    many models exist to draw curved, non-linear boundaries, such as the extra trees and neural network models that\n    were also used in this project.</p>\n    \n    `;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/et-explanation.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1#explanation-header {\\n  font-family: Playfair Display;\\n  font-size: 24pt;\\n}\\n\\ndiv#parent-nav-div {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: start;\\n      -ms-flex-pack: start;\\n          justify-content: flex-start;\\n}\\n\\ndiv.explanation-tab {\\n  -webkit-transition-duration: .2s;\\n          transition-duration: .2s;\\n  font-family: Roboto;\\n  font-size: 14pt;\\n  margin: 30px 45px 60px 0;\\n  border-bottom: solid white 2px;\\n}\\n\\ndiv.explanation-tab:hover {\\n  cursor: pointer;\\n  -webkit-transition-duration: .2s;\\n          transition-duration: .2s;\\n  border-bottom: solid black 2px;\\n}\\n\\ndiv.explanation-tab.active {\\n  -webkit-transition-duration: .2s;\\n          transition-duration: .2s;\\n  border-bottom: solid black 2px;\\n}\\n\\ndiv.explanation-tab.deactivated {\\n  color: darkgray;\\n}\\n\\ndiv.explanation-tab.deactivated:hover {\\n  cursor: default;\\n  border-bottom: solid white 2px;\\n}\\n\\napp-rb-explanation app-svm-explanation {\\n  display: block;\\n  width: 100%;\\n  margin-bottom: 50px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-parent.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/explanation-parent.component.css\n// module chunks = main","import {\n  Component, OnInit, Input, AfterViewInit, OnDestroy, ViewChild, ViewChildren,\n  ComponentFactoryResolver, ViewEncapsulation, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { DataService, Target, Modifier, TargetsAndModifiers,\n  PredictionResponse, RbResponse, SvmResponse} from '../../../services/data.service';\nimport { RbExplanationComponent } from './rb-explanation.component';\nimport { SvmExplanationComponent } from './svm-explanation.component';\nimport { EtExplanationComponent } from './et-explanation.component';\nimport { CnnExplanationComponent } from './cnn-explanation.component';\n\nimport { ExplanationViewDirective } from './explanation-view.directive';\n\nimport * as d3 from 'd3-selection';\nimport {isUndefined} from 'util';\nimport {isNewline} from 'codelyzer/angular/styles/cssLexer';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-explanation-parent',\n  template: `\n    <h1 id=\"explanation-header\">How do they work?</h1>\n    <div id=\"parent-nav-div\">\n      <div id=\"rule-based-tab\" class=\"explanation-tab deactivated\" data-model-name=\"rb\" (click)=\"explanationSelected($event)\">\n        Rule-Based\n      </div>\n      <div id=\"svm-fs-tab\" class=\"explanation-tab deactivated\" data-model-name=\"svm-fs\" (click)=\"explanationSelected($event)\">\n        SVM-FS\n      </div>\n      <div id=\"svm-ds-tab\" class=\"explanation-tab deactivated\" data-model-name=\"svm-ds\" (click)=\"explanationSelected($event)\">\n        SVM-DS\n      </div>\n      <div id=\"et-tab\" class=\"explanation-tab deactivated\" data-model-name=\"et\" (click)=\"explanationSelected($event)\">\n        ET\n      </div>\n      <div id=\"cnn-tab\" class=\"explanation-tab deactivated\" data-model-name=\"cnn\" (click)=\"explanationSelected($event)\">\n        CNN\n      </div>\n    </div>\n    <ng-template appExplanationView></ng-template>\n  `,\n  styleUrls: ['./explanation-parent.component.css']\n})\nexport class ExplanationParentComponent implements OnInit, AfterViewInit, OnChanges {\n\n  private selectedModelName: string = '';\n  private activeComponent: RbExplanationComponent | SvmExplanationComponent | EtExplanationComponent | CnnExplanationComponent;\n  private modelNames = ['rb', 'svm-ds', 'svm-fs']\n  private changeKeyNames: string[] = ['rbData', 'svmDSData', 'svmFSData'];\n  @ViewChild(ExplanationViewDirective) explanationViewProperty: ExplanationViewDirective;\n  @Input() rbData: RbResponse;\n  @Input() svmFSData: SvmResponse;\n  @Input() svmDSData: SvmResponse;\n  @Input() predictionMade: boolean;\n\n  modelNameMap: object = {\n    'rb': {data: this.rbData, tabName: 'rule-based-tab'},\n    'svm-ds': {data: this.svmDSData, tabName: 'svm-ds-tab'},\n    'svm-fs': {data: this.svmFSData, tabName: 'svm-fd-tab'}\n  }\n\n  constructor(private dataService: DataService, private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Check for changes to 'predictionMade'\n    if (changes.hasOwnProperty('predictionMade') && this.inputValueIsBeingUpdated('predictionMade', changes)){\n      const predictionChange = changes.predictionMade;\n      if (predictionChange.previousValue === false && predictionChange.currentValue === true){\n        // Remove 'deactivated' class from the tabs\n        // Check if 'selectedModel' has a value, if so call explanationSelected() and pass in\n        // object whose id is equal to the selected tab. Otherwise call explanationSelected()\n        // with the svm tab id.\n        let explanationTabs = d3.selectAll('.explanation-tab').classed('deactivated', false);\n        let ruleBasedTab = d3.select('#rule-based-tab').node();\n        let selectionInput = {target: ruleBasedTab}\n        this.explanationSelected(selectionInput);\n      }\n    }\n\n    // Check for changes to model data and update properties accordingly.\n    for (let modelName of this.changeKeyNames) {\n      if (changes.hasOwnProperty(modelName)){\n        if (this.inputValueIsBeingSet(modelName, changes) || this.inputValueIsBeingUpdated(modelName, changes)) {\n          this.onModelDataChange(modelName, changes[modelName].currentValue);\n        }\n      }\n    }\n  }\n\n  explanationSelected(event) {\n    if (event.target.classList.contains('deactivated')) {\n      return;\n    }\n    let explanationTabs = d3.selectAll(\".explanation-tab\").classed('active', false);\n    let selectedTabId = event.target.id;\n    let selectedModelName = this.selectedModelName = event.target.getAttribute('data-model-name');\n    let selectedTabElement = d3.select(`#${selectedTabId}`).classed('active', true);\n    this.displayExplanation(selectedModelName);\n  }\n\n  displayExplanation(explanationName: 'rb' | 'svm-fs' | 'svm-ds' | 'et' | 'cnn') {\n\n    let selectedComponent: any;\n    let data: RbResponse | SvmResponse;\n\n    if (explanationName === 'rb'){\n      selectedComponent = RbExplanationComponent;\n      data = this.rbData;\n    }else if (explanationName.startsWith('svm')) {\n      selectedComponent = SvmExplanationComponent;\n      if (explanationName === 'svm-fs') {\n        data = this.svmFSData;\n      } else {\n        data = this.svmDSData;\n      }\n    }else if (explanationName === 'et') {\n      selectedComponent = EtExplanationComponent;\n      data = this.svmDSData; // Just use the svm data to satisfy the compiler, this will obviously need to be changed.\n    }else {\n      // CNN Selected\n      selectedComponent = CnnExplanationComponent;\n      data = this.svmDSData; // Again, just use the svm data for now.\n    }\n\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(selectedComponent);\n    let viewContainerRef = this.explanationViewProperty.viewContainerRef;\n    viewContainerRef.clear();\n\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    let componentInstance: RbExplanationComponent | SvmExplanationComponent | EtExplanationComponent | CnnExplanationComponent\n      = componentRef.instance as RbExplanationComponent | SvmExplanationComponent | EtExplanationComponent | CnnExplanationComponent;\n    componentInstance.setData(data);\n    this.activeComponent = componentInstance;\n  }\n\n  onModelDataChange(modelName: string, newModelData: any) {\n    // update the data property of whichever view is currently being shown.\n    // If no view is being shown call setTimeout and try again after the view is displayed.\n    if (newModelData.model !== this.activeComponent.getData().model){\n      return;\n    }\n    if (JSON.stringify(this.activeComponent.getData()) === JSON.stringify(newModelData)) {\n      return;\n    }\n    this.activeComponent.setData(newModelData);\n  }\n\n  inputValueIsBeingSet(key: string, changes: SimpleChanges) {\n    if (!(changes.hasOwnProperty(key))) {\n      throw Error(`Changes does not have key: ${key}`)\n    }\n    const change = changes[key];\n    if (isUndefined(change.previousValue) && !isUndefined(change.currentValue)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  inputValueIsBeingUpdated(key: string, changes: SimpleChanges) {\n    if (!(changes.hasOwnProperty(key))) {\n      throw Error(`Changes does not have key: ${key}`)\n    }\n    const change = changes[key];\n    if (!isUndefined(change.previousValue)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-parent.component.ts","import {Directive, HostListener, ElementRef, Host} from '@angular/core';\n\n\n@Directive({\n  selector: '[appExplanationTabBehaivor]'\n})\n\nexport class ExplanationTabBehaivorDirective {\n\n  activeLink: boolean;\n\n  constructor(private element: ElementRef) {}\n\n  @HostListener('mouseover') onMouseOver() {\n    console.log('Mouse Over');\n  }\n\n  @HostListener('mouseout') onMouseOut() {\n    console.log('Mouse Out');\n  }\n\n  @HostListener('click') onClick() {\n    console.log('Clicked');\n  }\n\n  myInstanceMethod(stuffToSay: string) {\n    console.log(stuffToSay);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-tab-behaivor.directive.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div#rb-explanation {\\n  /*border: solid green 1px;*/\\n  /*margin-bottom: 400px;*/\\n}\\n\\ndiv#arrow-title-div {\\n  /*border: solid red 1px;*/\\n}\\n\\n#left-arrow {\\n  fill:none;\\n  stroke:#000;\\n  stroke-miterlimit:10;\\n  stroke-width:2px;\\n}\\n\\nsvg#explanation-text-box-svg {\\n  cursor: pointer;\\n  -webkit-transition-duration: .3s;\\n          transition-duration: .3s;\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n  -webkit-transform-origin: center;\\n          transform-origin: center;\\n  /*border: solid 1px blue;*/\\n}\\n\\nsvg#explanation-text-box-svg.open {\\n  -webkit-transition-duration: .3s;\\n          transition-duration: .3s;\\n  -webkit-transform: rotate(270deg);\\n          transform: rotate(270deg);\\n}\\n\\n/*g#explanation-text-box-left-arrow-group {*/\\n\\n/*border: solid 1px yellow;*/\\n\\n/*}*/\\n\\n#explanation-span {\\n  -webkit-transition-duration: .3s;\\n          transition-duration: .3s;\\n  position: relative;\\n  top: -8px;\\n  font-family: Roboto;\\n  font-size: 12pt;\\n  color: darkgray;\\n}\\n\\n#explanation-span.hidden {\\n  -webkit-transition-duration: .3s;\\n          transition-duration: .3s;\\n  color: white;\\n}\\n\\ndiv#explanation-text-content-div {\\n  overflow: hidden;\\n  -webkit-transition-duration: 1s;\\n          transition-duration: 1s;\\n  max-height: 750px;\\n  font-family: Roboto;\\n  font-size: 13pt;\\n}\\n\\ndiv#explanation-text-content-div.closed {\\n  -webkit-transition-duration: .3s;\\n          transition-duration: .3s;\\n  max-height: 0;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-text-box.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/explanation-text-box.component.css\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\nimport * as d3 from 'd3-selection';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-explanation-text-box',\n  template: `\n    <div id=\"rb-explanation\">\n      <div id=\"arrow-title-div\">\n        <svg width=\"25px\" height=\"25px\" (click)=\"onSvgClick()\" id=\"explanation-text-box-svg\">\n          <g id=\"explanation-text-box-left-arrow-group\" transform=\"translate(7, 3)\">\n            <polyline id=\"left-arrow\" points=\"9.71 18.49 1.37 9.59 9.71 0.68\"/>\n          </g>\n        </svg>\n        <span id=\"explanation-span\">Explanation</span>\n      </div>\n      <div id=\"explanation-text-content-div\" class=\"closed\" [innerHTML]=\"content\"></div>\n    </div>\n  `,\n  styleUrls: ['./explanation-text-box.component.css']\n})\nexport class ExplanationTextBoxComponent implements OnInit {\n\n  @Input() content: string;\n\n  constructor() {}\n\n  ngOnInit() {\n\n  }\n\n  onSvgClick() {\n    const svg = d3.select('#explanation-text-box-svg');\n    svg.classed('open', !svg.classed('open'));\n\n    const contentDiv = d3.select('#explanation-text-content-div');\n    contentDiv.classed('closed', !contentDiv.classed('closed'));\n\n    const explanationSpan = d3.select('#explanation-span');\n    explanationSpan.classed('hidden', !explanationSpan.classed('hidden'));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-text-box.component.ts","import { Directive, ViewContainerRef } from '@angular/core';\n\n\n@Directive({\n  selector: '[appExplanationView]',\n})\n\nexport class ExplanationViewDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/explanation-view.directive.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"span {\\n  font-family: Roboto;\\n  font-size: 14pt;\\n  margin-right: 4px;\\n}\\n\\n.targetTextChunk {\\n  border: 1px solid orangered;\\n  background-color: rgb(255, 191, 141);\\n}\\n\\n.modifierTextChunk {\\n  border: 1px solid rgb(166, 226, 45);\\n  background: rgba(166, 226, 45, 0.2);\\n}\\n\\n.targetTextChunk, .modifierTextChunk {\\n  border-radius: 4px;\\n  padding: .4em;\\n  color: black;\\n}\\n\\n.targetTextChunk::after {\\n  display: inline-block;\\n  vertical-align: middle;\\n  content: \\\"TARGET\\\";\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  font-size: 0.6em;\\n  margin: 0px 0px 0.1rem 0.5rem;\\n  padding: 0.35em;\\n  background: orangered;\\n  border-radius: 0.35em;\\n}\\n\\n.modifierTextChunk.neg::after {\\n  display: inline-block;\\n  vertical-align: middle;\\n  content: \\\"NEG\\\";\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  font-size: 0.6em;\\n  margin: 0px 0px 0.1rem 0.5rem;\\n  padding: 0.35em;\\n  background: rgb(166, 226, 45);\\n  border-radius: 0.35em;\\n}\\n\\n.modifierTextChunk.pos::after {\\n  display: inline-block;\\n  vertical-align: middle;\\n  content: \\\"POS\\\";\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  font-size: 0.6em;\\n  margin: 0px 0px 0.1rem 0.5rem;\\n  padding: 0.35em;\\n  background: rgb(166, 226, 45);\\n  border-radius: 0.35em;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-annotated-sentence.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/rb-annotated-sentence.component.css\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { NgClass } from '@angular/common';\n\nimport { ParsedInputSentenceData } from '../../../services/rb-sentence-parser.service';\n\n@Component({\n  selector: 'app-rb-annotated-sentence',\n  template: `\n    <span>{{index + 1}}.</span>\n    <span *ngFor=\"let chunk of _parsedSentence\" [ngClass]=\"[chunk.type, chunk.polarity]\"> {{chunk.text}}</span>\n  `,\n  styleUrls: ['./rb-annotated-sentence.component.css']\n})\nexport class RbAnnotatedSentenceComponent implements OnInit {\n\n  _parsedSentence: ParsedInputSentenceData;\n\n  @Input() index: number;\n  @Input('parsedSentence')\n  set  parsedSentence(sentence: ParsedInputSentenceData) {\n    this._parsedSentence = sentence;\n    this.renderSentence();\n  };\n\n  ngOnInit() {\n\n  }\n\n  renderSentence() {\n    console.log(this._parsedSentence);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-annotated-sentence.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"app-rb-annotated-sentence {\\n  display: block;\\n  margin: 20px 0 20px 0;\\n}\\n\\napp-explanation-text-box {\\n  margin: 0 40px 0 40px;\\n}\\n\\nh2 {\\n  font-family: Roboto;\\n  font-weight: 600;\\n  font-size: 24pt;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-explanation.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/rb-explanation.component.css\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport {DataService, Target, Modifier, TargetsAndModifiers, RbResponse, PredictionResponse} from '../../../services/data.service';\nimport { RbSentenceParserService, PlainTextChunk,\n  TargetTextChunk, ModifierTextChunk, ParsedInputSentenceData } from '../../../services/rb-sentence-parser.service';\n\nimport { RbAnnotatedSentenceComponent } from './rb-annotated-sentence.component';\n\nimport {isUndefined} from 'util';\n\n@Component({\n  // encapsulation: ViewEncapsulation.None,\n  selector: 'app-rb-explanation',\n  template: `\n    <h2>Sentences Processed by the Rule-based Algorithm</h2>\n    <app-explanation-text-box [content]=\"explanationContent\"></app-explanation-text-box>\n    <app-rb-annotated-sentence *ngFor=\"let parsedSentenceData of parsedInputSentenceData; let i = index\" [index]=\"i\" [parsedSentence]=\"parsedSentenceData\">\n    </app-rb-annotated-sentence>\n    \n  `,\n  styleUrls: ['./rb-explanation.component.css']\n})\nexport class RbExplanationComponent implements OnInit {\n\n  data: RbResponse;\n  private targetsAndModifiers: TargetsAndModifiers;\n  stringifiedData: string;\n  explanationContent: string = this.getExplanationContent();\n  parsedInputSentenceData: ParsedInputSentenceData;\n\n  constructor(private sentenceParserService: RbSentenceParserService, private dataService: DataService) {}\n\n  ngOnInit() {\n    // debugger;\n    this.dataService.getTargetsAndModifiers((data: TargetsAndModifiers) => {\n      // debugger;\n      this.targetsAndModifiers = data;\n      this.getParsedInputSentenceData();\n    });\n  }\n\n  // Type assertion is necessary becasue call signature must match svm-explanation as per\n  // https://github.com/Microsoft/TypeScript/issues/7294\n  setData(data: PredictionResponse): void {\n    // debugger;\n    this.data = data as RbResponse;\n    this.stringifiedData = JSON.stringify(data);\n    console.log(data);\n    this.getParsedInputSentenceData();\n  }\n\n  getData(): RbResponse {\n    return this.data;\n  }\n\n  private getParsedInputSentenceData() {\n    // Since we need the targets and modifiers, and the prediction data, and they come from different places, both async,\n    // this function acts as a gate to ensure that we have both before we call the parserService.\n    // debugger;\n    if (isUndefined(this.targetsAndModifiers) || isUndefined(this.data)) {\n      return;\n    }\n    this.parsedInputSentenceData = this.sentenceParserService.parseInputSentences(this.data.dynamic, this.targetsAndModifiers);\n  }\n\n  renderVisualizationContents() {}\n\n\n  getExplanationContent() {\n    return `\n    <p>The rule-based classifier relies on two lists of words: a list of targets and a list of modifiers. Target words \n    are words like “bleed”, “hematoma”, or “sdh”. They are the keywords that most directly indicate that a bleeding \n    event has occurred. Modifier words are words like “history of”, “denies”, or “presents with”. They are words or \n    phrases that modify the meaning of the target words. Each word in the list of modifiers is designated as either \n    a positive modifier, or a negating modifier. For example, one negative modifier that is included in the modifier \n    list is “no evidence”. Consider the text “there is no evidence of GI bleed”. The target in this sentence is \n    “bleed”. However, since the negative modifier “no evidence” appears in the same sentence the algorithm will not \n    mark the sentence as an indication of bleeding. Contrast this example with another: “chief complaint: epistaxis”. \n    In this case the rule-based algorithm will detect that the positive modifier “chief complaint” is present in the \n    same sentence as the target “epistaxis” and mark the sentence as an indication of bleeding. Similarly, sentences \n    with a target term but no modifier terms will also be marked as an indication of bleeding.</p>\n    <br>\n    <p>In the visualization below, target terms are highlighted in red. Any modifier terms that occur in the same sentence \n    are highlighted in green and are accompanied by an indicator that specifies whether they are a positive or negative modifier.</p>\n    `;\n  }\n}\n\n\n// Here is a sentence about bleeding. And another evidence of hematoma.\n// Definitely not a hematoma.\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/rb-explanation.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"app-explanation-text-box {\\n  margin: 0 40px 0 40px;\\n}\\n\\nh2 {\\n  font-family: Roboto;\\n  font-weight: 600;\\n  font-size: 24pt;\\n}\\n\\napp-svm-term-row {\\n  display: block;\\n  position: relative;\\n  font-family: Roboto;\\n  font-size: 14pt;\\n  margin: 0; /* Let the smv term row tables use their cell height to regulate margin, this makes the plus signs easy*/\\n}\\n\\n/* ********** General Table Styles ****************** */\\n\\ntd {\\n  text-align: center;\\n  font-family: Roboto;\\n  font-size: 10pt;\\n  color: darkgray;\\n}\\n\\n/* ********** Present-Feature Table Styles ****************** */\\n\\ntable#present-features-table {\\n  margin: 70px 0 30px 0;\\n  border-bottom: solid 1px darkgray;\\n}\\n\\n#tally-container {\\n  width: 1056px;\\n  position: relative;\\n  font-family: Roboto;\\n  font-size: 16pt;\\n}\\n\\n#final-tally-line-container {\\n  position: relative;\\n  /*border: 1px solid yellowgreen;*/\\n  width: 400px;\\n  left: 725px;\\n}\\n\\n.tally-flex-container {\\n  position: relative;\\n  /*border: 1px solid greenyellow;*/\\n  width: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n}\\n\\n.tally-flex-container > div {\\n  /*border: 1px solid orangered;*/\\n  width: 120px;\\n  margin-top: 10px;\\n}\\n\\n#score-total-div {\\n  width: 292px;\\n}\\n\\n#model-bias-div {\\n  width: 290px;\\n}\\n\\n#final-prediction-div {\\n  width: 400px;\\n  margin-top: 20px;\\n}\\n\\n#feature-scores-sum-line-div, #final-prediction-sum-line-div {\\n  margin-top: 20px;\\n  border-bottom: 1px solid black;\\n}\\n\\n#score-total-span {\\n  margin-right: 110px;\\n}\\n\\n#model-bias-span {\\n  margin-right: 105px;\\n}\\n\\n#final-prediction-span {\\n  margin-right: 0;\\n}\\n\\n#final-prediction-value-container {\\n  max-height: 100%;\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  width: 250px;\\n}\\n\\nspan#final-prediction-span-value {\\n  border: 1px solid;\\n  padding: .35em;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  border-radius: .35em;\\n  margin: 0 auto;\\n}\\n\\nspan#final-prediction-span-value.pos {\\n  border-color: orangered;\\n  background: rgb(255, 191, 141);\\n}\\n\\nspan#final-prediction-span-value.neg {\\n  border-color: rgb(166, 226, 45);\\n  background: rgba(166, 226, 45, 0.2);\\n}\\n\\nspan#final-prediction-span-value.pos::after {\\n  display: inline-block;\\n  vertical-align: middle;\\n  content: \\\"POS\\\";\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  font-size: 0.6em;\\n  margin: 0 0 0.1rem 0.5rem;\\n  padding: 0.35em;\\n  background: orangered;\\n  border-radius: .35em;\\n}\\n\\nspan#final-prediction-span-value.neg::after {\\n  display: inline-block;\\n  vertical-align: middle;\\n  content: \\\"NEG\\\";\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  font-size: 0.6em;\\n  margin: 0 0 0.1rem 0.5rem;\\n  padding: 0.35em;\\n  background: rgb(166, 226, 45);\\n  border-radius: .35em;\\n}\\n\\n/*.targetTextChunk::after {*/\\n\\n/*display: inline-block;*/\\n\\n/*vertical-align: middle;*/\\n\\n/*content: \\\"TARGET\\\";*/\\n\\n/*box-sizing: border-box;*/\\n\\n/*font-size: 0.6em;*/\\n\\n/*margin: 0px 0px 0.1rem 0.5rem;*/\\n\\n/*padding: 0.35em;*/\\n\\n/*background: orangered;*/\\n\\n/*border-radius: 0.35em;*/\\n\\n/*}*/\\n\\n/*.modifierTextChunk.neg::after {*/\\n\\n/*display: inline-block;*/\\n\\n/*vertical-align: middle;*/\\n\\n/*content: \\\"NEG\\\";*/\\n\\n/*box-sizing: border-box;*/\\n\\n/*font-size: 0.6em;*/\\n\\n/*margin: 0px 0px 0.1rem 0.5rem;*/\\n\\n/*padding: 0.35em;*/\\n\\n/*background: rgb(166, 226, 45);*/\\n\\n/*border-radius: 0.35em;*/\\n\\n/*}*/\\n\\n/*.modifierTextChunk.pos::after {*/\\n\\n/*display: inline-block;*/\\n\\n/*vertical-align: middle;*/\\n\\n/*content: \\\"POS\\\";*/\\n\\n/*box-sizing: border-box;*/\\n\\n/*font-size: 0.6em;*/\\n\\n/*margin: 0px 0px 0.1rem 0.5rem;*/\\n\\n/*padding: 0.35em;*/\\n\\n/*background: rgb(166, 226, 45);*/\\n\\n/*border-radius: 0.35em;*/\\n\\n/*}*/\\n\\n/* ********** Zero-Count Feature-Table Styles ****************** */\\n\\ntable#zero-count-table {\\n  border-collapse: collapse;\\n}\\n\\ntable#zero-count-table td {\\n  border-bottom: 1px solid darkgray;\\n}\\n\\ntable#zero-count-table tr:last-child td {\\n  border-bottom: 0;\\n}\\n\\ntable#zero-count-table tr:first-child td {\\n  border-top: 1px solid darkgray;\\n}\\n\\ntable#zero-count-table thead > tr {\\n  font-family: Roboto;\\n  font-size: 12pt;\\n  color: darkgray;\\n  /*border-bottom: 1px solid darkgray;*/\\n}\\n\\n.align-right {\\n  text-align: right;\\n}\\n\\n.align-left {\\n  text-align: left;\\n}\\n\\ntable#zero-count-table tbody td {\\n  font-size: 14pt;\\n  color: black;\\n  font-family: Roboto;\\n  line-height: 70px;\\n}\\n\\n.term-span {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  border: 1px solid;\\n  border-radius: .35em;\\n  padding: .35em;\\n}\\n\\n.term-span.pos {\\n  border-color: orangered;\\n  background: rgb(255, 191, 141);\\n}\\n\\n.term-span.neg {\\n  border-color: rgb(166, 226, 45);\\n  background: rgba(166, 226, 45, 0.2);\\n}\\n\\n#zero-count-feature-header {\\n  font-family: Roboto;\\n  font-size: 26pt;\\n  font-weight: 600;\\n  margin: 170px auto 90px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-explanation.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/svm-explanation.component.css\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\n\nimport { SvmResponse, PredictionResponse, SvmExplanationRow } from '../../../services/data.service';\n\nexport interface ColumnWidths {\n  term: number;\n  count: number;\n  firstX: number;\n  idf: number;\n  firstEquals: number;\n  unnormalized: number;\n  arrow: number;\n  normalized: number;\n  secondX: number;\n  weight: number;\n  secondEquals: number;\n  score: number;\n}\n\nexport interface AbsentFeatureColumnWidths {\n  term: number;\n  idf: number;\n  weight: number;\n}\n\ninterface ZeroCountRow extends SvmExplanationRow {\n  featureSpanClass: 'pos' | 'neg';\n}\n\n@Component({\n  selector: 'app-svm-explanation',\n  template: `\n    <h2>How the SVM Model Interprets the Text</h2>\n    <app-explanation-text-box [content]=\"explanationContent\"></app-explanation-text-box>\n    <table id=\"present-features-table\">\n      <colgroup>\n        <col width=\"{{columnWidths.term}}\"/>\n        <col width=\"{{columnWidths.count}}\"/>\n        <col width=\"{{columnWidths.firstX}}\"/>\n        <col width=\"{{columnWidths.idf}}\"/>\n        <col width=\"{{columnWidths.firstEquals}}\"/>\n        <col width=\"{{columnWidths.unnormalized}}\"/>\n        <col width=\"{{columnWidths.arrow}}\"/>\n        <col width=\"{{columnWidths.normalized}}\"/>\n        <col width=\"{{columnWidths.secondX}}\"/>\n        <col width=\"{{columnWidths.weight}}\"/>\n        <col width=\"{{columnWidths.secondEquals}}\"/>\n        <col width=\"{{columnWidths.score}}\"/>\n      </colgroup>\n      <thead></thead>\n      <tr>\n        <td>Feature</td>\n        <td>Count</td>\n        <td></td>\n        <td>IDF Value</td>\n        <td></td>\n        <td>Unnormalized Representation</td>\n        <td></td>\n        <td>Normalized Representation</td>\n        <td></td>\n        <td>Model Weight</td>\n        <td></td>\n        <td>Score</td>\n      </tr>\n      <thead></thead>\n    </table>\n    \n    <app-svm-term-row *ngFor=\"let datum of rowsWithPresentTerms; let last = last\"\n                      [class.last-item]=\"last\"\n                      [rowData]=\"datum\" \n                      [columnWidths]=\"columnWidths\"></app-svm-term-row>\n    \n    <div id=\"tally-container\">\n      <div class=\"tally-flex-container\">\n        <div id=\"feature-scores-sum-line-div\">+</div>\n      </div>\n      <div class=\"tally-flex-container\">\n        <div id=\"score-total-div\"><span id=\"score-total-span\">Score Total</span><span>{{scoreTotal.toFixed(2)}}</span></div>\n      </div>\n      <div class=\"tally-flex-container\">\n        <div id=\"model-bias-div\"><span id=\"model-bias-span\">Model Bias</span><span>{{data.dynamic[0].intercept.toFixed(2)}}</span></div>\n      </div>\n      <div class=\"tally-flex-container\">\n        <div id=\"final-prediction-sum-line-div\">+</div>\n      </div>\n      <div id=\"final-tally-line-container\">\n        <div id=\"final-prediction-div\">\n          <span id=\"final-prediction-span\">Final Prediction</span>\n          <span id=\"final-prediction-value-container\">\n            <span id=\"final-prediction-span-value\" class=\"{{this.finalPredictionClass}}\">{{finalPrediction.toFixed(2)}}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n    \n    <div id=\"zero-count-feature-header\">Features not present in the text, sorted by Model Weight</div>\n    <table id=\"zero-count-table\">\n      <colgroup>\n        <col width=\"{{absentFeaturesColumnWidths.term}}\"/>\n        <col width=\"{{absentFeaturesColumnWidths.weight}}\"/>\n        <col width=\"{{absentFeaturesColumnWidths.idf}}\"/>\n      </colgroup>\n      <thead>\n        <tr>\n          <th class=\"align-left\">Feature</th>\n          <th>Model Weight</th>\n          <th>IDF Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let row of rowsWithZeroCounts\">\n          <td class=\"align-left\"><span class=\"term-span {{row.featureSpanClass}}\">{{row.term}}</span></td>\n          <td>{{row.weight.toFixed(2)}}</td>\n          <td>{{row.idf.toFixed(2)}}</td>\n        </tr>\n      </tbody>\n      \n    </table>\n  `,\n  styleUrls: ['./svm-explanation.component.css']\n})\nexport class SvmExplanationComponent implements OnInit {\n\n  private data: SvmResponse;\n  private rowsWithPresentTerms: SvmExplanationRow[];\n  private rowsWithZeroCounts: ZeroCountRow[];\n  private scoreTotal: number;\n  private explanationContent: string = this.getExplanationContent();\n  private tableWidth: number;\n  private finalPrediction: number;\n  private finalPredictionClass: 'pos' | 'neg';\n  private columnWidths: ColumnWidths = {\n    term: 200,\n    count: 100,\n    firstX: 20,\n    idf: 110,\n    firstEquals: 20,\n    unnormalized: 110,\n    arrow: 100,\n    normalized: 110,\n    secondX: 20,\n    weight: 110,\n    secondEquals: 20,\n    score: 110\n  };\n  private absentFeaturesColumnWidths: AbsentFeatureColumnWidths = {\n    term: 330,\n    weight: 300,\n    idf: 250\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    // Calculate the table width for use in positioning the tallies.\n    let tableWidthSum = 0;\n    for (let columnInfo in this.columnWidths) {\n      if (this.columnWidths.hasOwnProperty(columnInfo)){\n        const width = this.columnWidths[columnInfo];\n        tableWidthSum += width;\n      }\n    }\n    this.tableWidth = tableWidthSum;\n  }\n\n  // Type assertion is necessary becasue call signature must match rb-explanation as per\n  // https://github.com/Microsoft/TypeScript/issues/7294\n  setData(data: PredictionResponse): void {\n    this.data = data as SvmResponse;\n    // Filter the rows to only rows with counts >= 1. All the other rows will be displayed below the sum.\n    this.rowsWithPresentTerms = this.data.dynamic.filter((row: SvmExplanationRow, index, array) => {\n      return row.count !== 0;\n    });\n    let sum = 0;\n    for (let row of this.rowsWithPresentTerms) {\n      sum += row.modelScore;\n    }\n    this.scoreTotal = sum;\n    this.rowsWithZeroCounts = []\n    for (let row of data.dynamic) {\n      if (row.count === 0) {\n        let zeroRow = {\n          term: row.term,\n          weight: row.weight,\n          idf: row.idf,\n          count: row.count,\n          unnormalized: row.unnormalized,\n          normalization: row.normalization,\n          modelScore: row.modelScore,\n          intercept: row.intercept,\n          featureSpanClass: row.weight > 0 ? 'pos' : 'neg'\n        }\n        this.rowsWithZeroCounts.push(zeroRow as ZeroCountRow)\n      }\n      this.finalPrediction = data.dynamic[0].intercept + this.scoreTotal;\n      this.finalPredictionClass = this.finalPrediction > 0 ? 'pos' : 'neg';\n    }\n\n    // Sort both collections by model score.\n    this.rowsWithPresentTerms.sort((a, b) => {\n      return b.weight - a.weight;\n    })\n    this.rowsWithZeroCounts.sort((a, b) =>{\n      return b.weight - a.weight;\n    })\n  }\n\n  getData(): SvmResponse {\n    return this.data;\n  }\n\n  getExplanationContent(): string {\n    return `<p>The support vector machines that we trained are linear models. This means that they learn a weight for each\n    dimension of their input. In this case there are 100 input dimensions, each representing a word or phrase that\n    the model selected from the training corpus. In machine learning, each input dimension is referred to as a \"feature\".\n    The features selected by the model can be seen in the list below. Features that were assigned a positive weight are \n    highlighted in orange and features that were assigned a negative weight are highlighted in green.</p>\n    <br>\n    <p>To help the model select useful features we employed a technique known as term-frequency inverse-document-frequency \n    (TFIDF) which assigns weights to all the words in the corpus. Words that are judged to be more salient to the meaning\n    of a note are given a higher score than words which are judged to be less salient. So in addition to a model weight\n    for each feature you will also see an IDF weight.</p><br>\n    <p>To arrive at the final prediction the model counts how many times each feature appears in the note \n    (the \"Count\" column) and multiplies each count by its respective IDF score (the \"IDF Value\" column). This yields a list with 100 entries,\n    one for each feature. This list can be thought of as a 100-dimensional vector embedded in 100-dimensional space\n    (the \"Unnormalized Representation\" column. In\n    order to make the model less sensitive to note length, this vector is then normalized. That is, each entry in the vector\n    is divided by the sum of all the squared entries in the vector. This effectively shrinks the vector so that it has a length\n    of 1. The normalized values can be seen in the \"Normalized Representation Column\". Next, the normalized values are\n    each multiplied by the weights that were learned by the model (the \"Weights\" column) to give a score for each feature\n    (the \"Score\" column). All the scores are summed and the model bias is added to yield the final prediction. Prediction\n    values above 0 are interpreted as a positive prediction and values below zero are interpreted as a negative \n    prediction.</p><br>\n    <p>It is common in the machine learning domain to consider the geometric interpretation of a model in order to gain\n    some intuition about how it works. Geometrically, the features that are fed to a machine learning model can be thought\n    of as points in space. Ideally, features for a model are chosen such that similar things lie close together in that space \n    and dissimilar things lie far apart. Most \n    if not all machine learning classifiers, such as these, can be thought of as tools for learning the boundaries in \n    these spaces that separate groups of points from each other. In the case of linear classifiers, these\n    boundaries are flat surfaces, more formally known as hyperplanes. The boundaries need not be flat, however, and\n    many models exist to draw curved, non-linear boundaries, such as the extra trees and neural network models that\n    were also used in this project.</p>\n    \n    `;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-explanation.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"span {\\n  position: relative;\\n  font-size: 16pt;\\n}\\n\\n.term-span {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  border: 1px solid;\\n  border-radius: .35em;\\n  padding: .35em;\\n}\\n\\n.term-span.neg {\\n  border-color: rgb(166, 226, 45);\\n  background: rgba(166, 226, 45, 0.2);\\n}\\n\\n.term-span.pos {\\n  border-color: orangered;\\n  background: rgb(255, 191, 141);\\n}\\n\\ntd {\\n  text-align: center;\\n  line-height: 2em;\\n}\\n\\ntd > span {\\n  text-align: center;\\n}\\n\\ntd.td-align-right {\\n  text-align: right;\\n}\\n\\n.td-align-right > span {\\n  text-align: right;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-term-row.component.css\n// module id = ../../../../../src/app/modules/content/model-explanations/svm-term-row.component.css\n// module chunks = main","import {Component, OnInit, Input, AfterViewInit, ElementRef} from '@angular/core';\n\nimport { SvmExplanationRow } from '../../../services/data.service';\nimport { ColumnWidths } from './svm-explanation.component';\n\n@Component({\n  selector: 'app-svm-term-row',\n  template: `\n    <table>\n      <colgroup>\n        <col width=\"{{columnWidths.term}}\"/>\n        <col width=\"{{columnWidths.count}}\"/>\n        <col width=\"{{columnWidths.firstX}}\"/>\n        <col width=\"{{columnWidths.idf}}\"/>\n        <col width=\"{{columnWidths.firstEquals}}\"/>\n        <col width=\"{{columnWidths.unnormalized}}\"/>\n        <col width=\"{{columnWidths.arrow}}\"/>\n        <col width=\"{{columnWidths.normalized}}\"/>\n        <col width=\"{{columnWidths.secondX}}\"/>\n        <col width=\"{{columnWidths.weight}}\"/>\n        <col width=\"{{columnWidths.secondEquals}}\"/>\n        <col width=\"{{columnWidths.score}}\"/>\n      </colgroup>\n      <thead></thead>\n      <tbody>\n        <tr>\n          <td class=\"td-align-right\">\n            <span class=\"term-span {{termSpanClass}}\">{{_rowData.term}}</span>\n          </td>\n          <td>\n            <span class=\"count-span\">{{_rowData.count}}</span>\n          </td>\n          <td>\n            <span class=\"first-x-span\">x</span>\n          </td>\n          <td>\n            <span class=\"idf-span\">{{_rowData.idf.toFixed(2)}}</span>\n          </td>\n          <td>\n            <span class=\"first-equals-span\">=</span>\n          </td>\n          <td>\n            <span class=\"unnormalized-span\">{{_rowData.unnormalized.toFixed(2)}}</span>\n          </td>\n          <td>\n            <span class=\"arrow-span\">(Arrow)</span>\n          </td>\n          <td>\n            <span class=\"normalized-span\">{{_rowData.normalization.toFixed(2)}}</span>\n          </td>\n          <td>\n            <span class=\"second-x-span\">x</span>\n          </td>\n          <td>\n            <span class=\"weight-span\">{{_rowData.weight.toFixed(2)}}</span>\n          </td>\n          <td>\n            <span class=\"second-equals-span\">=</span>\n          </td>\n          <td>\n            <span class=\"score-span\">{{_rowData.modelScore.toFixed(2)}}</span>\n          </td>\n          <td>\n        </tr>\n        <tr *ngIf=\"!isLastRow\">\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <span class=\"right-plus-span\">+</span>\n          </td>\n        </tr>\n      <tbody>\n    </table>\n  `,\n  styleUrls: ['./svm-term-row.component.css']\n})\nexport class SvmTermRowComponent implements OnInit {\n\n  private _rowData: SvmExplanationRow;\n  private termSpanClass: string;\n  private isLastRow = false;\n  @Input()\n  set rowData (rowData: SvmExplanationRow) {\n    if (rowData.weight > 0) {\n      this.termSpanClass = 'pos';\n    } else {\n      this.termSpanClass = 'neg';\n    }\n    this._rowData = rowData;\n  }\n  @Input() columnWidths: ColumnWidths;\n\n  constructor(private thisElement: ElementRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      const classList = this.thisElement.nativeElement.classList;\n      if (classList.contains('last-item')) {\n        this.isLastRow = true;\n      }\n    });\n  }\n\n}\n\n\n// term: number;\n// count: number;\n// firstX: number;\n// count: number;\n// firstEquals: number;\n// unnormalized: number;\n// arrow: number;\n// normalized: number;\n// secondX: number;\n// weight: number;\n// secondEquals: number;\n// score: number;\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/model-explanations/svm-term-row.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  font-family: \\\"Roboto\\\";\\n  font-size: 16pt;\\n  margin: 130px 0 15px 0;\\n  /*letter-spacing: 1px;*/\\n}\\n\\nh2 {\\n  font-family: Roboto;\\n  font-size: 14pt;\\n}\\n\\nh2#example-button-header {\\n  font-family: Roboto;\\n  letter-spacing: 1px;\\n  font-size: 14pt;\\n  margin-top: 0px;\\n}\\n\\nh3 {\\n  font-family: Roboto;\\n  font-size: 10pt;\\n}\\n\\n#content {\\n  position: relative;\\n  width: 85%;\\n  height: 630px;\\n  margin: 50px auto 0 auto;\\n  border: 1px solid white;\\n}\\n\\n#result-icon-div {\\n  width: 90%;\\n  margin: 0 auto 0 0;\\n  /*border: solid 1px blue;*/\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  height: 120px;\\n}\\n\\n#text-entry-div {\\n  position: relative;\\n  float: left;\\n  /*border: solid 1px darkgray;*/\\n  height: 630px;\\n  width: 60%;\\n}\\n\\n.result-row {\\n  display: inline-block;\\n}\\n\\n#rb-result-div {\\n  width: 80px;\\n}\\n\\n#dividing-line-div {\\n  height: 100%;\\n  width: 5px;\\n}\\n\\n.paired-result-div {\\n  display: inline-block;\\n  text-align: center;\\n}\\n\\n.individual-result-div {\\n  display: inline-block;\\n  text-align: center;\\n  margin: 0 2px 0 2px;\\n}\\n\\napp-prediction-result {\\n  display: inline-block;\\n  width: 80px;\\n}\\n\\n#examples-div {\\n  margin-left: 60%;\\n  height: 450px;\\n  text-align: left;\\n  /*border: solid 1px lime;*/\\n}\\n\\n#text-area-div {\\n  width: 90%;\\n  margin: 15px auto 10px 0;\\n  /*border: solid 1px blueviolet;*/\\n}\\n\\ntextarea#text-entry {\\n  position: relative;\\n  resize: none;\\n  width: 100%;\\n  height: 400px;\\n  /*border: solid 1px lightgray;*/\\n  border-radius: 3px;\\n  font-family: Roboto;\\n  font-size: 14pt;\\n}\\n\\ntextarea:focus, input:focus{\\n  outline: none;\\n  border: solid 1px black;\\n}\\n\\n#button-container-div {\\n  position: relative;\\n  width: 90%;\\n  margin: 0 auto 0 0;\\n  /*border: solid 1px orange;*/\\n  padding: 0;\\n}\\n\\n#button-position-div {\\n  /*border: solid 1px rebeccapurple;*/\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  width: 235px;\\n  margin: 0 0 0 auto;\\n}\\n\\nbutton {\\n  font-family: Roboto;\\n  letter-spacing: 1px;\\n  font-size: 14pt;\\n  border-radius: 5px;\\n  width: 110px;\\n  height: 40px;\\n  cursor: pointer;\\n}\\n\\nbutton:focus {\\n  outline: none;\\n}\\n\\nbutton#clear-button {\\n  background-color: white;\\n  border: none;\\n  color: black;\\n}\\n\\nbutton#predict-button {\\n  border: solid black 2px;\\n  color: black;\\n}\\n\\n#example-selection-container {\\n  height: 32px;\\n  width: 120px;\\n  /*margin: 0 auto;*/\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\\n.example-svg:hover {\\n  cursor: pointer;\\n}\\n\\ncircle.active {\\n  fill: #575757;\\n}\\n\\ntextarea#note-display {\\n  height: 264px;\\n  width: 90%;\\n  margin: 20px auto 0 auto;\\n  resize: none;\\n  /*border: solid 1px black;*/\\n  border: none;\\n  font-family: Roboto;\\n  font-size: 10pt;\\n}\\n\\n#copy-button-div {\\n  margin: 20px auto 0 auto;\\n  width: 195px;\\n  height: 35px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  /*border: solid 1px green;*/\\n}\\n\\n#copy-button-div:hover {\\n  cursor: pointer;\\n}\\n\\n#copy-svg-div {\\n  display: inline-block;\\n}\\n\\n#left-arrow {\\n  fill:none;\\n  stroke:#000;\\n  stroke-miterlimit:10;\\n  stroke-width:2px;\\n}\\n\\napp-explanation-parent {\\n  display: block;\\n  width: 85%;\\n  margin: 0 auto 80px auto;\\n}\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/models.component.css\n// module id = ../../../../../src/app/modules/content/models.component.css\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { ExplanationParentComponent } from './model-explanations/explanation-parent.component';\nimport { RbExplanationComponent} from './model-explanations/rb-explanation.component';\nimport { SvmExplanationComponent } from './model-explanations/svm-explanation.component';\n\nimport { ConfigurationService } from '../../configuration.service';\nimport { PredictionResponse, RbResponse, SvmResponse } from '../../services/data.service';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as d3 from 'd3';\n\ninterface ChildMap {\n  rb: object;\n  svm: object;\n  'svm-ds': object;\n  et: object;\n  'et-ds': object;\n  cnn: object;\n  'cnn-ds': object;\n}\n\n@Component({\n  selector: 'app-models',\n  template: `\n    <section id=\"content\">\n      <div id=\"text-entry-div\">\n        <div id=\"result-icon-div\">\n          <div id=\"rb-result-div\" class=\"result-row\">\n            <div class=\"individual-result-div\">\n              <h2 style=\"margin: 9px;\">RB</h2>\n              <app-prediction-result #rbResult [myId]=\"'rb'\" [attr.id]=\"'rb'\"></app-prediction-result>\n            </div>\n          </div>\n          <div id=\"dividing-line-div\" class=\"result-row\">\n            <svg width=\"5\" height=\"100%\">\n              <rect width=\"100%\" height=\"100%\" fill=\"#575757\"></rect>\n            </svg>\n          </div>\n          <div id=\"ml-results-div\" class=\"result-row\">\n            <div class=\"paired-result-div\">\n              <h2>SVM</h2>\n              <div class=\"individual-result-div\">\n                <h3>FS</h3>\n                <app-prediction-result #svmResult [myId]=\"'svm'\" [attr.id]=\"'svm'\"></app-prediction-result>\n              </div>\n              <div class=\"individual-result-div\">\n                <h3>DS</h3>\n                <app-prediction-result #svmDSResult [myId]=\"'svm-ds'\" [attr.id]=\"'svm-ds'\"></app-prediction-result>\n              </div>\n            </div>\n            <div class=\"paired-result-div\">\n              <h2>ET</h2>\n              <div class=\"individual-result-div\">\n                <h3>FS</h3>\n                <app-prediction-result #etResult [myId]=\"'et'\" [attr.id]=\"'et'\"></app-prediction-result>\n              </div>\n              <div class=\"individual-result-div\">\n                <h3>DS</h3>\n                <app-prediction-result #etDSResult [myId]=\"'et-ds'\" [attr.id]=\"'et-ds'\"></app-prediction-result>\n              </div>\n            </div>\n            <div class=\"paired-result-div\">\n              <h2>CNN</h2>\n              <div class=\"individual-result-div\">\n                <h3>FS</h3>\n                <app-prediction-result #cnnResult [myId]=\"'cnn'\" [attr.id]=\"'cnn'\"></app-prediction-result>\n              </div>\n              <div class=\"individual-result-div\">\n                <h3>DS</h3>\n                <app-prediction-result #cnnDSResult [myId]=\"'cnn-ds'\" [attr.id]=\"'cnn-ds'\"></app-prediction-result>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"text-area-div\">\n          <textarea id=\"text-entry\" spellcheck=\"false\" [placeholder]=\"textAreaPlaceholder\" (input)=\"userText=$event.target.value\"></textarea>\n        </div>\n        <div id=\"button-container-div\">\n          <div id=\"button-position-div\">\n            <button type=\"button\" id=\"clear-button\" (click)=\"clearText()\">Clear</button>\n            <button type=\"button\" id=\"predict-button\" (click)=\"predictText()\">Predict</button>\n          </div>\n        </div>\n      </div>\n      <div id=\"examples-div\">\n        <h1>Try an example.</h1>\n        <div id=\"example-selection-container\">\n          <div id=\"positive-example-div\">\n            <svg id=\"positive-selection\" width=\"32\" height=\"32\" class=\"example-svg\" (click)=\"exampledSelected($event)\">\n              <circle id=\"positive-selection\" r=\"16\" cx=\"16\" cy=\"16\" fill=\"darkgray\" class=\"example-circle active\" data-circle-index=\"0\"></circle>\n              <line y1=\".5\" y2=\".5\" x2=\"13\" transform=\"translate(10, 15)\" stroke=\"white\" stroke-width=\"1\"></line>\n              <line x1=\".5\" x2=\".5\" y2=\"13\" transform=\"translate(16, 9)\" stroke=\"white\" stroke-width=\"1\"></line>\n            </svg>\n          </div>\n          <div id=\"negative-example-div\" class=\"example-svg\">\n            <svg id=\"negative-selection\" width=\"32\" height=\"32\" class=\"example-svg\" (click)=\"exampledSelected($event)\">\n              <circle id=\"negative-selection\" r=\"16\" cx=\"16\" cy=\"16\" fill=\"darkgray\" class=\"example-circle\" data-circle-index=\"1\"></circle>\n              <line y1=\".5\" y2=\".5\" x2=\"13\" transform=\"translate(10, 15)\" stroke=\"white\" stroke-width=\"1\"></line>\n            </svg>\n          </div>\n        </div>\n        <textarea id=\"note-display\" spellcheck=\"false\" readonly=\"true\" [value]=\"activeExampleNote\"></textarea>\n        <div id=\"copy-button-div\" (click)=\"copyExampleNote()\">\n          <div id=\"copy-svg-div\">\n            <svg width=\"25px\" height=\"35px\">\n              <g transform=\"translate(0, 4)\">\n                <polyline id=\"left-arrow\" points=\"9.71 18.49 1.37 9.59 9.71 0.68\"/>\n              </g>\n            </svg>\n          </div>\n          <h2 id=\"example-button-header\">Use This Example</h2>\n        </div>\n      </div>\n    </section>\n    <app-explanation-parent [predictionMade]=\"predictionMade\" [rbData]=\"rbData\" [svmDSData]=\"svmDSData\" [svmFSData]=\"svmFSData\"></app-explanation-parent>\n    \n  `,\n  styleUrls: ['./models.component.css']\n})\nexport class ModelsComponent implements OnInit {\n\n  userText: string;\n  textAreaPlaceholder: string;\n  modelNames: string[];\n  backendUrl: string;\n  exampleNotes: string[];\n  activeExampleNote: string;\n  predictionMade: boolean = false;\n  rbData: RbResponse;\n  svmFSData: SvmResponse;\n  svmDSData: SvmResponse;\n  predictHeaders: HttpHeaders = new HttpHeaders({'Content-Type' : 'application/json'})\n\n  @ViewChild('rbResult') rbResult: object;\n  @ViewChild('svmResult') svmResult: object;\n  @ViewChild('svmDSResult') svmDSResult: object;\n  @ViewChild('etResult') etResult: object;\n  @ViewChild('etDSResult') etDSResult: object;\n  @ViewChild('cnnResult') cnnResult: object;\n  @ViewChild('cnnDSResult') cnnDSResult: object;\n\n  childMap: ChildMap;\n\n  constructor(private http: HttpClient, private configService: ConfigurationService) {\n    this.backendUrl = this.configService.getActiveUrl();\n  }\n\n  ngOnInit() {\n    this.textAreaPlaceholder = 'Enter the text you want to classify.';\n    this.modelNames = ['rb', 'svm', 'svm-ds', 'et', 'et-ds', 'cnn', 'cnn-ds'];\n    this.childMap = {\n      rb: this.rbResult,\n      svm: this.svmResult,\n      'svm-ds': this.svmDSResult,\n      et: this.etResult,\n      'et-ds': this.etDSResult,\n      cnn: this.cnnResult,\n      'cnn-ds': this.cnnDSResult\n    };\n    this.exampleNotes = this.loadNotes();\n    this.activeExampleNote = this.exampleNotes[0];\n  }\n\n  predictText() {\n    if (this.userText === '') {\n      return;\n    }\n    for (const modelName of this.modelNames) {\n      for (const childViewKey in this.childMap) {\n        if (this.childMap.hasOwnProperty(childViewKey)) {\n          const childView = this.childMap[childViewKey];\n          childView.showLoading();\n        }\n      }\n      this.http.post(this.backendUrl + '/predict',\n        {text: this.userText, model: modelName},\n        {headers: this.predictHeaders}\n      ).subscribe((response: PredictionResponse) => {\n        const childView = this.childMap[response.model];\n        childView.showResult(response.prediction);\n\n        // These values are all being watched by explanation parent.\n        if (!(this.predictionMade)) {\n          this.predictionMade = true;\n        }\n\n        if (response.model === 'rb') {\n          this.rbData = response as RbResponse;\n        } else if (response.model === 'svm') {\n          this.svmFSData = response as SvmResponse;\n        } else if (response.model === 'svm-ds') {\n          this.svmDSData = response as SvmResponse;\n        }\n      },\n        (error) => {\n          console.log('There was an error making the prediction, logging error:')\n          console.log(error);\n        });\n    }\n  }\n\n  clearText() {\n    const textArea = document.getElementById('text-entry') as HTMLTextAreaElement;\n    textArea.value = this.userText = '';\n  }\n\n  exampledSelected(event) {\n    const selectedId = event.srcElement.getAttribute('id');\n    const svg = d3.selectAll(\"circle.example-circle\").classed('active', false);\n    const selectedCircle = d3.select(`circle#${selectedId}`).classed('active', true);\n    const domElement = selectedCircle.node() as HTMLElement;\n    const index = domElement.getAttribute('data-circle-index');\n    this.activeExampleNote = this.exampleNotes[index];\n  }\n\n  copyExampleNote() {\n    const noteCopy = this.activeExampleNote.slice(0);\n    const textArea = document.getElementById('text-entry') as HTMLTextAreaElement;\n    textArea.value = this.userText = noteCopy;\n  }\n\n  loadNotes() {\n    const notes = [];\n    notes[0] = 'Admission Date: 04/24/2004      Discharge Date: 04/27/2004\\n' +\n      'Service: MEDICINE\\n' +\n      'Allergies: No known allergies\\n' +\n      '\\n' +\n      'Chief Complaint: chest pain, SOB, Afib\\n' +\n      '\\n' +\n      'Major Surgical or Invasive Procedure:\\n' +\n      'Cardiac catheterization\\n' +\n      'Pulmonary vein isolation\\n' +\n      '\\n' +\n      'Brief Hospital Course:\\n' +\n      'The patient is a 67 year old male on coumadin who presents with chest ' +\n      'pain and elevated troponin. He went in and out of rapid afib and sinus ' +\n      'bradycardia while admitted. Was scheduled for a PCI on 4/26/2004 which ' +\n      'was complicated by orophanyngeal bleeding from TEE probe. He was ' +\n      'subsequently transferred to the CCU. Nodal agents were held given his ' +\n      'bradychardia when not in AFIB. A CT scan was done which showed no evidence of sdh.\\n' +\n      '\\n' +\n      'Oropharyngeal Injury:\\n' +\n      'Patient suffered an injury during intubation in preparation for PCI. ' +\n      'Higher than normal resistance was met in the pharynx during the placement ' +\n      'of the probe. Insertion of the probe was stopped. Mild oozing was noted and ' +\n      'the pharynx was packed, successfully ending the oozing.\\n' +\n      '\\n' +\n      'GERD:\\n' +\n      'Will continue omeprazole at home, 40mg q.d. Notably the reflux symptoms only ' +\n      'appear when the patient is in afib, suggesting that it may be a symptomatic ' +\n      'arrythmia rather than GERD.'\n\n\n\n    notes[1] = 'Example note 2.'\n\n    return notes;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/models.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"nav {\\n  margin: 0 auto;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  width: 300px;\\n  height: 80px;\\n}\\n\\nnav div {\\n  height: 100%;\\n  /*background-color: aliceblue;*/\\n  padding: 0;\\n  display: inline-block;\\n}\\n\\nnav div a {\\n  position: relative;\\n  top: 25px;\\n  font-size: 14pt;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/nav.component.css\n// module id = ../../../../../src/app/modules/content/nav.component.css\n// module chunks = main","module.exports = \"<nav>\\n  <div class=\\\"nav-link-div\\\" data-svg-id=\\\"home\\\" (click)=\\\"onLinkClick($event)\\\">\\n    <a routerLink=\\\"\\\"  data-svg-id=\\\"home\\\" class=\\\"playfair-font\\\" (mouseover)=\\\"onLinkMouseover($event)\\\" (mouseout)=\\\"onLinkMouseout($event)\\\">Home</a>\\n  </div>\\n  <div class=\\\"nav-link-div\\\" data-svg-id=\\\"models\\\" (click)=\\\"onLinkClick($event)\\\">\\n    <a routerLink=\\\"models\\\" data-svg-id=\\\"models\\\" class=\\\"playfair-font\\\" (mouseover)=\\\"onLinkMouseover($event)\\\" (mouseout)=\\\"onLinkMouseout($event)\\\">Models</a>\\n  </div>\\n  <div class=\\\"nav-link-div\\\" data-svg-id=\\\"code\\\" (click)=\\\"onCodeClick()\\\">\\n    <a href=\\\"{{codeUrl}}\\\" data-svg-id=\\\"code\\\" target=\\\"_blank\\\" class=\\\"playfair-font\\\" (mouseover)=\\\"onLinkMouseover($event)\\\" (mouseout)=\\\"onLinkMouseout($event)\\\">Code</a>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/nav.component.html\n// module id = ../../../../../src/app/modules/content/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  codeUrl: string;\n  activeLinkSVGId: string;\n  constructor(private _router: Router) {\n  }\n\n  ngOnInit() {\n    this.codeUrl = 'https://github.com/MMontgomeryTaggart/CV_MachineLearning';\n\n    // Update the active link id and set the rect to be 100% for the active link.\n    const currentRoute = this._router.url.split('/').pop();\n    switch (currentRoute){\n      case \"\":\n        this.activeLinkSVGId = \"home\";\n        break;\n      case \"vis\":\n        this.activeLinkSVGId = \"vis\";\n        break;\n      case \"models\":\n        this.activeLinkSVGId = \"models\";\n    }\n\n    // Add the mouseOver mouseOut behaivor\n    const anchors = d3.selectAll(\"div.nav_link_div a\")\n    anchors.on(\"mouseover\", this.onLinkMouseover).on(\"mouseout\", this.onLinkMouseout);\n\n    // Add SVG\n    setTimeout(()=>{\n      // Add svg elements for link selection\n      let navLinks = d3.selectAll(\"div.nav-link-div\");\n      navLinks.each(function(d, i){\n        let currentDivSelection = d3.select(this);\n        let currentAnchor = currentDivSelection.select(\"a\").node() as HTMLElement;\n        let currentSvgId = currentAnchor.getAttribute(\"data-svg-id\");\n        let currentBoundingRect = currentAnchor.getBoundingClientRect();\n        let currentWidth = currentBoundingRect.width;\n        currentDivSelection.attr(\"style\", `width: ${currentWidth}px`);\n        let svg = currentDivSelection.append(\"svg\");\n        svg.attr(\"width\", currentWidth)\n          .attr(\"height\", \"10px\")\n          .attr(\"style\", \"position: relative; top: 26px; fill: black;\")\n          .attr(\"id\", currentSvgId);\n      });\n      let svg = d3.selectAll(\"div.nav-link-div svg\");\n      let rects = svg.append(\"rect\");\n      rects.attr(\"height\", \"3px\")\n        .attr(\"width\", 0)\n        .attr(\"fill\", \"#4F4F4F\");\n\n      this.setRectWidth(this.activeLinkSVGId, \"100%\");\n    }, 200);\n  }\n\n  onLinkMouseover(event: any){\n    const id = event.srcElement.getAttribute(\"data-svg-id\");\n    this.setRectWidth(id, \"100%\")\n  }\n\n  onLinkMouseout(event: any){\n    if (event.srcElement.getAttribute(\"data-svg-id\") === this.activeLinkSVGId){\n      return;\n    }\n    const id = event.srcElement.getAttribute(\"data-svg-id\");\n    this.setRectWidth(id, \"0\")\n  }\n\n  onLinkClick(event: any){\n    const newId = event.srcElement.getAttribute(\"data-svg-id\");\n    // Reset old link\n    this.setRectWidth(this.activeLinkSVGId, \"0\")\n\n    // Set new link\n    this.activeLinkSVGId = newId;\n    this.setRectWidth(newId, \"100%\")\n  }\n\n  onCodeClick(){\n    this.setRectWidth(\"code\", \"0\");\n  }\n\n  setRectWidth(svgId: string, width: string){\n    const rect = d3.select(`svg#${svgId}`).select(\"rect\")\n    rect.transition()\n      .duration(300)\n      .attr(\"width\", width);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/nav.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/prediction-result.component.css\n// module id = ../../../../../src/app/modules/content/prediction-result.component.css\n// module chunks = main","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\n\nimport * as d3 from 'd3-selection';\nimport * as d3Shape from 'd3-shape';\nimport * as d3Ease from 'd3-ease';\nimport * as d3Interpolate from 'd3-interpolate';\nimport {DefaultArcObject} from 'd3-shape';\n\n@Component({\n  selector: 'app-prediction-result',\n  template: ``,\n  styleUrls: ['./prediction-result.component.css']\n})\nexport class PredictionResultComponent implements OnInit, AfterViewInit {\n\n  // D3 element types specified as per https://stackoverflow.com/questions/40756344/d3-v4-typescript-types\n  @Input() myId: string;\n  myContainer: d3.Selection<HTMLElement, any, any, any>;\n  mySvg: d3.Selection<SVGElement, any, any, any>;\n  svgWidth: number;\n  svgHeight: number;\n  myContentCircle: d3.Selection<SVGCircleElement, any, any, any>;\n  circleGrayFill: string;\n  circleGreenFill: string;\n  circleRedFill: string;\n  myVerticalLine: d3.Selection<SVGLineElement, any, any, any>;\n  myHorizontalLine: d3.Selection<SVGLineElement, any, any, any>;\n  myLoadArcGenerator: d3Shape.Arc<any, DefaultArcObject>;\n  myLoadArcGroup: d3.Selection<SVGGElement, any, any, any>;\n  myLoadArcPath: d3.Selection<SVGPathElement, any, any, any>;\n  myDropletGroup: d3.Selection<SVGGElement, any, any, any>;\n  dropletIcon: string;\n  spinDuration: number;\n  constructor() { }\n\n  ngOnInit() {\n    this.svgWidth = this.svgHeight = 80;\n    this.circleGrayFill = '#B1B2B1'; // 'darkgray';\n    this.circleGreenFill = '#38C16F';\n    this.circleRedFill = '#DF504F';\n    this.spinDuration = 1500;\n    this.dropletIcon = `<path d=\"M13.84,0C11.82,16.12,0,27.46,0,35.1a13.84,13.84,0,1,0,27.67,0C27.67,27.46,15.85,16.12,13.84,0Z\" />`;\n  }\n\n  ngAfterViewInit() {\n    this.myContainer = d3.select(`#${this.myId}`);\n    this.createContent();\n    this.spinLoadArc();\n  }\n\n  createContent() {\n    // We need a circle with two rects on it and a loady thingy on the edge.\n    this.mySvg = this.myContainer.append<SVGElement>('svg')\n      .attr('width', this.svgWidth)\n      .attr('height', this.svgHeight)\n      .classed('d3-result-svg', true);\n\n    this.myContentCircle = this.mySvg.append<SVGCircleElement>('circle')\n      .attr('cx', this.svgWidth / 2)\n      .attr('cy', this.svgHeight / 2)\n      .attr('r', 32)\n      .attr('stroke-width', 5)\n      .attr('stroke', this.circleGrayFill)\n      .attr('fill', 'white')\n      .attr('opacity', 1)\n      .classed('contentCircleClass', true);\n\n    this.myDropletGroup = this.mySvg.append<SVGGElement>('g').attr('id', 'dropletGroup');\n    this.myDropletGroup.html(this.dropletIcon);\n    this.myDropletGroup.attr('fill', this.circleGrayFill)\n      .attr('transform', 'translate(26.5, 15)');\n\n    this.myHorizontalLine = this.mySvg.append<SVGLineElement>('line')\n      .attr('y1', .5)\n      .attr('y2', .5)\n      .attr('x2', 15)\n      .attr('stroke', 'white')\n      .attr('stroke-weight', 1)\n      .attr('transform', 'translate(33, 50)')\n      .attr('opacity', 0);\n    this.myVerticalLine = this.mySvg.append<SVGLineElement>('line')\n      .attr('x1', .5)\n      .attr('x2', .5)\n      .attr('y2', 15)\n      .attr('stroke', 'white')\n      .attr('stroke-weight', 1)\n      .attr('transform', 'translate(40, 43)')\n      .attr('opacity', 0);\n\n    this.myLoadArcGenerator = d3Shape.arc()\n      .innerRadius(34)\n      .outerRadius(39)\n      .startAngle(0)\n      .endAngle(Math.PI / 3);\n\n    this.myLoadArcGroup = this.mySvg.append<SVGGElement>('g')\n      .classed('loadArcGroup', true)\n      .attr('opacity', 0)\n      .attr('transform', `translate(${this.svgWidth / 2}, ${this.svgHeight / 2})`);\n\n    this.myLoadArcPath = this.myLoadArcGroup.append<SVGPathElement>('path')\n      .attr('d', this.myLoadArcGenerator({\n        innerRadius: 34,\n        outerRadius: 39,\n        startAngle: 0,\n        endAngle: Math.PI / 3\n      }))\n      .attr('fill', '#3A6DA8');\n  }\n\n  spinLoadArc() {\n    setInterval(() => {\n      this.myLoadArcPath.transition()\n        .ease(d3Ease.easeLinear)\n        .duration(this.spinDuration)\n        .attrTween('transform', () => {\n          return d3Interpolate.interpolateString('rotate(0)', 'rotate(360)');\n        });\n    }, this.spinDuration);\n  }\n\n  showLoading() {\n    this.setLoadArcOpacity(1);\n    this.setCircleAndDropletColor(this.circleGrayFill);\n    this.setVerticalLineOpacity(0);\n    this.setHorizontalLineOpacity(0);\n  }\n\n  showResult(result: number) {\n    this.setLoadArcOpacity(0);\n    if (result === 1) {\n      this.setCircleAndDropletColor(this.circleRedFill);\n      this.setHorizontalLineOpacity(1);\n      this.setVerticalLineOpacity(1);\n    } else {\n      this.setCircleAndDropletColor(this.circleGreenFill);\n      this.setHorizontalLineOpacity(1);\n    }\n  }\n\n  setLoadArcOpacity(opacity: number) {\n    // debugger;\n    this.myLoadArcGroup\n      .transition()\n      .duration(300)\n      .attr('opacity', opacity);\n  }\n\n  setCircleAndDropletColor(color: string) {\n    this.myContentCircle\n      .transition()\n      .duration(300)\n      .attr('stroke', color);\n\n    this.myDropletGroup\n      .transition()\n      .duration(300)\n      .attr('fill', color);\n  }\n\n  setVerticalLineOpacity(opacity: number) {\n    this.myVerticalLine\n      .transition()\n      .duration(300)\n      .attr('opacity', opacity);\n  }\n\n  setHorizontalLineOpacity(opacity: number) {\n    this.myHorizontalLine\n      .transition()\n      .duration(300)\n      .attr('opacity', opacity);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/content/prediction-result.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  font-size: 64pt;\\n  margin: .76em 0;\\n}\\n\\nh2 {\\n  font-size: 24pt;\\n}\\n\\nh2#visualize-header {\\n  margin-top: 75px;\\n}\\n\\nh2#models-header {\\n  margin-top: 120px;\\n}\\n\\nh2#code-header {\\n  margin-top: 120px;\\n}\\n\\n#landing-subtitle {\\n  margin-bottom: 50px;\\n}\\n\\nnav {\\n  margin: 40px auto 30px auto;\\n  width: 700px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n\\n.card-div {\\n  position: relative;\\n  height: 300px;\\n  width: 300px;\\n  /*border: 1px solid;*/\\n  /*border-color: black;*/\\n  text-align: center;\\n  -webkit-transition-duration: .5s;\\n          transition-duration: .5s;\\n  background-color: #f0f0f0;\\n  /*border-radius: 2px;*/\\n}\\n\\n.card-div:hover {\\n  color: white;\\n  border: none;\\n  /*background-color: #3A6DA8;*/\\n  background-color: #DF504F;\\n  -webkit-transition-duration: .5s;\\n          transition-duration: .5s;\\n}\\n\\nnav div a span {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n}\\n\\ndiv#about-header-div {\\n  margin: 45px auto 0 auto;\\n  height: 50px;\\n  width: 400px;\\n  text-align: center;\\n}\\n\\ndiv#about-text-div {\\n  width: 85%;\\n  margin: 35px auto 35px auto;\\n}\\n\\ndiv#about-text-div p {\\n  font-size: 14pt;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/landing/landing.component.css\n// module id = ../../../../../src/app/modules/landing/landing.component.css\n// module chunks = main","module.exports = \"\\n<h1 class=\\\"playfair-font center-text\\\" id=\\\"landing-title\\\">Bleeding Detection with NLP</h1>\\n<h2 class=\\\"playfair-font center-text\\\" id=\\\"landing-subtitle\\\">Online Appendix</h2>\\n<p class=\\\"roboto-font center-text\\\" id=\\\"landing-description\\\">\\n  Welcome to the online appendix for the 2018 University of Utah bleeding detection study using NLP.\\n</p>\\n\\n<nav>\\n  <div class=\\\"card-div\\\">\\n    <h2 class=\\\"playfair-font\\\" id=\\\"models-header\\\">Try the Models</h2>\\n    <a routerLink=\\\"content/models\\\"><span></span></a>\\n  </div>\\n  <div class=\\\"card-div\\\">\\n    <h2 class=\\\"playfair-font\\\" id=\\\"code-header\\\">Get the Code</h2>\\n    <a href=\\\"{{codeUrl}}\\\" target=\\\"_blank\\\"><span></span></a>\\n  </div>\\n</nav>\\n\\n<!--<div id=\\\"about-header-div\\\">-->\\n  <!--<h2 class=\\\"roboto-font\\\">About</h2>-->\\n<!--</div>-->\\n\\n<!--<div id=\\\"about-text-div\\\">-->\\n  <!--<p class=\\\"roboto-font\\\">Something describing the study and/or the authors of the study. Maybe some pictures?</p>-->\\n<!--</div>-->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/landing/landing.component.html\n// module id = ../../../../../src/app/modules/landing/landing.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  codeUrl: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.codeUrl = 'https://github.com/MMontgomeryTaggart/CV_MachineLearning';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/modules/landing/landing.component.ts","import { Injectable } from '@angular/core';\nimport { ConfigurationService } from '../configuration.service';\n\nimport 'rxjs/add/operator/map';\n\nimport * as d3Fetch from 'd3-fetch';\nimport {isUndefined} from \"util\";\nimport {DSVRowString} from 'd3-dsv';\n\nexport interface SvmExplanationRow {\n  term: string;\n  weight: number;\n  idf: number;\n  count: number;\n  unnormalized: number;\n  normalization: number;\n  modelScore: number;\n  intercept: number;\n}\n\nexport interface PredictionResponse {\n  prediction: number;\n  time: number;\n  model: string;\n  dynamic: any;\n}\n\nexport interface RbResponse extends PredictionResponse {\n  dynamic: string[];\n}\n\nexport interface SvmResponse extends PredictionResponse {\n  dynamic: SvmExplanationRow[];\n}\n\ninterface RawTargetOrModifier {\n  Lex: string;\n  Type: string;\n  Regex: string;\n  Direction: string;\n}\n\nexport interface Target {\n  name: string;\n  type: string;\n  regex: string;\n  direction: 'backward' | 'forward' | 'bidirectional';\n  id: number;\n}\n\nexport interface Modifier {\n  name: string;\n  type: string;\n  regex: string;\n  direction: 'backward' | 'forward' | 'bidirectional';\n  id: number;\n}\n\nexport interface TargetsAndModifiers {\n  targets: Target[];\n  modifiers: Modifier[];\n}\n\n@Injectable()\nexport class DataService {\n\n  private idCount = 0;\n  private baseUrl: string;\n  private targetsAndModifiersData: TargetsAndModifiers;\n\n\n  constructor(private configService: ConfigurationService) {}\n\n  processObject(rawRow: DSVRowString, index: number, column: string[]) {\n    // debugger;\n    const processedObject: Target = {\n      name: rawRow.Lex as string,\n      type: rawRow.Type as string,\n      regex: rawRow.Regex as string,\n      direction: rawRow.Direction as 'backward' | 'forward' | 'bidirectional',\n      id: this.idCount++ as number\n    }\n    return processedObject;\n  }\n\n  getTargetsAndModifiers(callback: (data: TargetsAndModifiers) => void) {\n    this.baseUrl = this.configService.getActiveUrl();\n\n    const tempTargetsAndModifiers: TargetsAndModifiers = {targets: [], modifiers: []};\n      if (isUndefined(this.targetsAndModifiersData)) {\n        d3Fetch.tsv<Target>(this.baseUrl + '/public/data/targets.tsv', {}, this.processObject.bind(this))\n          .then((value) => {\n            tempTargetsAndModifiers.targets = value as Target[];\n\n            d3Fetch.tsv<Modifier>(this.baseUrl + '/public/data/modifiers.tsv', {}, this.processObject.bind(this))\n              .then((value) => {\n                tempTargetsAndModifiers.modifiers = value as Modifier[];\n                this.targetsAndModifiersData = tempTargetsAndModifiers;\n                return callback(this.targetsAndModifiersData);\n              }).catch((reason) =>{\n              console.log(JSON.stringify(reason));\n            })\n\n          }).catch((reason) => {\n          console.log(JSON.stringify(reason));\n        });\n      } else {\n        return callback(this.targetsAndModifiersData);\n      }\n\n  }\n}\n\n// d3Fetch.tsv(this.baseUrl + '/public/data/modifiers.tsv', (modifierRawRow: any, modifierList: RawTargetOrModifier[], modifiercColumns: string[]) => {\n//\n//   const targets: Target[] = targetList.map((rawTarget: RawTargetOrModifier) => {return this.convertRawRowToType<Target>(rawTarget)});\n//   const modifiers: Modifier[] = modifierList.map((rawModifier: RawTargetOrModifier) => {return this.convertRawRowToType<Modifier>(rawModifier)});\n//   this.targetsAndModifiersData = {\n//     targets,\n//     modifiers\n//   }\n//   observer.next(this.targetsAndModifiersData);\n//   observer.complete();\n// });\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/services/data.service.ts","import { Injectable } from '@angular/core';\n\nimport { Target, Modifier, TargetsAndModifiers } from './data.service';\nimport {isUndefined} from 'util';\n\nexport interface PlainTextChunk {\n  text: string;\n  type: 'plainTextChunk';\n  polarity: 'none';\n}\n\nexport interface ModifierTextChunk {\n  text: string;\n  id: number; // Corresponds to Modifier.id\n  type: 'modifierTextChunk';\n  polarity: 'pos' | 'neg';\n}\n\nexport interface TargetTextChunk {\n  text: string;\n  id: number; // Corresponds to Target.id\n  type: 'targetTextChunk';\n  polarity: 'none';\n}\n\nexport type ParsedInputSentenceData = (PlainTextChunk | ModifierTextChunk | TargetTextChunk)[][];\n\ninterface Span {\n  start: number;\n  end: number;\n}\n\ninterface TargetSpan extends Span {\n  type: 'targetSpan';\n  id: number;\n  polarity: 'none';\n}\n\ninterface ModifierSpan extends Span {\n  type: 'modifierSpan';\n  id: number;\n  polarity: 'pos' | 'neg';\n}\n\ninterface WordSpans {\n  words: string[];\n  spans: Span[];\n}\n\ninterface TargetAndModifierSpans { // One TargetAndModifierSpan object represents targets and modifiers for one sentence.\n  targetSpans: TargetSpan[];\n  modifierSpans: ModifierSpan[];\n}\n\n@Injectable()\nexport class RbSentenceParserService {\n\n  constructor() { }\n\n  public parseInputSentences(inputSentences: string[], targetsAndModifiers: TargetsAndModifiers): ParsedInputSentenceData {\n    const cleanedSentences: string[] = this.cleanWhitespace(inputSentences);\n    const wordSpans: WordSpans[] = this.findWordSpans(cleanedSentences);\n    const targetAndModSpans: TargetAndModifierSpans[] = this.findTargetAndModifierSpans(cleanedSentences, targetsAndModifiers);\n    const textChunks: ParsedInputSentenceData = this.createTextChunks(wordSpans, targetAndModSpans);\n    return textChunks;\n\n  }\n\n  private cleanWhitespace(inputSentences: string[]): string[] {\n    const cleanedSentences = inputSentences.map((rawSentence: string) => {\n      const cleanSentence = rawSentence.trim().replace(/\\s+/, ' ');\n      return cleanSentence;\n    });\n    return cleanedSentences;\n  }\n\n  private findWordSpans(cleanedSentences: string[]): WordSpans[] {\n    const allWordSpans: WordSpans[] = cleanedSentences.map((cleanSentence: string) => {\n      const regex = RegExp(/\\S+/, 'g');\n      const wordmatches = [];\n      let match;\n      while ((match = regex.exec(cleanSentence)) !== null) {\n        wordmatches.push(match);\n      }\n\n      const sentenceWordSpans: Span[] = [];\n      const sentenceWords: string[] = [];\n      for (let i = 0; i < wordmatches.length; i++) {\n        let currentStart: number;\n        let currentEnd: number;\n        // Take span as position of first character to position of last character.\n        currentStart = wordmatches[i].index;\n        currentEnd = wordmatches[i].index + wordmatches[i][0].length - 1;\n\n\n        const span: Span = {start: currentStart, end: currentEnd};\n        sentenceWordSpans.push(span);\n\n        const currentWord = wordmatches[i][0];\n        sentenceWords.push(currentWord);\n      }\n\n      return {words: sentenceWords, spans: sentenceWordSpans};\n    });\n\n    return allWordSpans;\n  }\n\n  // private getSpansFromMatches(matchObj: any):\n\n  private findTargetAndModifierSpans(cleanedSentences: string[], targetsAndModifiers: TargetsAndModifiers):\n  TargetAndModifierSpans[] {\n    const allTargetAndModifierSpans: TargetAndModifierSpans[] = [];\n    for (const cleanSentence of cleanedSentences) {\n\n      const targetSpans: TargetSpan[] = [];\n      for (const target of targetsAndModifiers.targets) {\n        const regex = RegExp(target.regex, 'gi');\n        const sentenceTargetSpans = this.findRegexSpans(cleanSentence, regex, 'targetSpan', target.id, targetsAndModifiers);\n        for (const singleTargetSpan of sentenceTargetSpans) {\n          targetSpans.push(singleTargetSpan as TargetSpan);\n        }\n      }\n\n      const modifierSpans: ModifierSpan[] = [];\n      for (const modifier of targetsAndModifiers.modifiers) {\n        const regex = RegExp(modifier.regex, 'gi');\n        const sentenceModifierSpans = this.findRegexSpans(cleanSentence, regex, 'modifierSpan', modifier.id, targetsAndModifiers);\n        for (const singleModifierSpan of sentenceModifierSpans) {\n          modifierSpans.push(singleModifierSpan as ModifierSpan);\n        }\n      }\n\n      allTargetAndModifierSpans.push({targetSpans, modifierSpans})\n    }\n\n    return allTargetAndModifierSpans;\n  };\n\n  private findRegexSpans(text: string,\n                         regex: RegExp,\n                         type: 'targetSpan' | 'modifierSpan',\n                         id: number,\n                         targetsAndModifiers: TargetsAndModifiers): TargetSpan[] | ModifierSpan[] {\n    const matches = [];\n    let notNull = true;\n    let match;\n    while ((match = regex.exec(text)) !== null) {\n      matches.push(match);\n    }\n\n    const spans: any[] = [];\n    for (const match of matches) {\n      const start: number = match.index;\n      const end: number = start + match[0].length;\n      spans.push({start, end, type, id});\n    }\n\n    if (type === 'targetSpan') {\n      // Add the polarity for the target spans, which is always none. The polarity is used by the ui components.\n      for (let span of spans) {\n        span.polarity = 'none';\n      }\n      return spans as TargetSpan[];\n    } else {\n      // Add the polarity to each of the spans.\n      for (let span of spans) {\n        const mySpan = span as ModifierSpan;\n        const modifier = this.findTargetOrModifierByID(mySpan.id, targetsAndModifiers);\n        const spanType = modifier.type === 'AFFIRMED_EXISTENCE' ? 'pos' : 'neg';\n        span.polarity = spanType;\n      }\n      return spans as ModifierSpan[];\n    }\n  }\n\n  private createTextChunks(wordSpans: WordSpans[],\n                           targetAndModifierSpans: TargetAndModifierSpans[],\n                           filterModifiersWithoutTargets: boolean=true):\n  ParsedInputSentenceData {\n    if (wordSpans.length !== targetAndModifierSpans.length) {\n      throw Error(\"Word spans and targetAndModifierSpans should have the same length.\");\n    }\n    const parsedSentenceChunks: ParsedInputSentenceData = [];\n    for (let sentenceIndex = 0; sentenceIndex < wordSpans.length; sentenceIndex++) {\n      // These values represent the word spans, modifier spans, and target spans for a single sentence.\n      const currentWordSpans = wordSpans[sentenceIndex].spans;\n      const currentWords = wordSpans[sentenceIndex].words;\n      const currentModifierSpans = targetAndModifierSpans[sentenceIndex].modifierSpans;\n      const currentTargetSpans = targetAndModifierSpans[sentenceIndex]. targetSpans;\n      const currentSentence = currentWords.join(' ');\n\n\n      // Create an object that maps from string index to word index, assuming that whitespace belongs to the\n      // word that follows it. Then create a list that combines all target and modifier spans, sorted by\n      // start, assuming that none of them overlap, which they shouldn't.\n      // Then simply iterate through the list, using the index mapper to determine where each target or\n      // modifier begins and ends.\n\n      const sentenceIndexToWordIndexMap = this.createStringIndexToWordIndexMap(currentSentence, currentWordSpans);\n      const combinedSortedList = this.createSortedListOfTargetsAndModifierSpans(currentTargetSpans, currentModifierSpans);\n      const currentTargetAndModifierWordSpans = this.convertTargetAndModifierSentenceSpansToWordSpans(combinedSortedList, sentenceIndexToWordIndexMap);\n\n\n      // Word index where the last span ended. It is from this index+1 up to the next index-1 that we will grab.\n      // If (startOfNextSpan - 1) - (endOfLastSpan + 1) <= 0 then we insert no plain chunk, we go right from\n      // one highlight to another.\n      const chunksForThisSentence = []\n\n      // Start with the easy case: there are no targets or modifiers.\n      if (currentModifierSpans.length === 0 && currentTargetSpans.length === 0) {\n\n        chunksForThisSentence.push({text: currentSentence, type: 'plainTextChunk', polarity: 'none'})\n\n        // The next easiest case is if `filterModifiersWithoutTargets` is true and the sentence has no targets\n      } else if (filterModifiersWithoutTargets && currentTargetSpans.length === 0) {\n\n        chunksForThisSentence.push({text: currentSentence, type: 'plainTextChunk', polarity: 'none'})\n\n      } else {\n\n        let endOfLastSpan = -1;\n        for (const targetModSpan of currentTargetAndModifierWordSpans) {\n          let chunkType = '';\n          let text = '';\n          let highlightChunk = null;\n          let plainChunk = null;\n          if ((targetModSpan.start - 1) - endOfLastSpan <= 0) { // i.e. Next span starts at next word\n            // Skip adding a plain chunk and just add a chunk for the next span.\n            chunkType = targetModSpan.type === 'targetSpan' ? 'targetTextChunk': 'modifierTextChunk';\n            text = this.extractWordsFromSpan(currentWords, targetModSpan);\n            highlightChunk = {text, id: targetModSpan.id, type: chunkType, polarity: targetModSpan.polarity};\n            chunksForThisSentence.push(highlightChunk);\n            endOfLastSpan = targetModSpan.end;\n          } else {\n            // Add a plain chunk up to the next span and then add the next span.\n            chunkType = 'plainTextChunk';\n            text = this.extractWordsFromSpan(currentWords, {start: (endOfLastSpan + 1), end: (targetModSpan.start - 1)});\n            plainChunk = {text, type: chunkType, polarity: 'none'};\n            chunksForThisSentence.push(plainChunk);\n\n            // Add next span\n            chunkType = targetModSpan.type === 'targetSpan' ? 'targetTextChunk': 'modifierTextChunk';\n            text = this.extractWordsFromSpan(currentWords, targetModSpan);\n            highlightChunk = {text, id: targetModSpan.id, type: chunkType, polarity: targetModSpan.polarity};\n            chunksForThisSentence.push(highlightChunk);\n            endOfLastSpan = targetModSpan.end;\n          }\n        }\n      }\n\n      parsedSentenceChunks.push(chunksForThisSentence);\n\n    }\n    return parsedSentenceChunks;\n  };\n\n\n  private createStringIndexToWordIndexMap(sentence: string, wordSpans: Span[]): number[] {\n    let currentWordIndex = 0;\n    const mapper = [];\n    for (let sentenceIndex = 0; sentenceIndex < sentence.length; sentenceIndex++) {\n      const currentWordSpan = wordSpans[currentWordIndex];\n      mapper.push(currentWordIndex);\n      if (sentenceIndex > currentWordSpan.end) {\n        currentWordIndex++;\n      }\n    }\n    return mapper;\n  }\n\n  private createSortedListOfTargetsAndModifierSpans(targetSpans: TargetSpan[], modifierSpans: ModifierSpan[]) {\n    let targetCopy: (TargetSpan | ModifierSpan)[] = [];\n    targetCopy.push(...targetSpans);\n    let combinedList: (TargetSpan | ModifierSpan)[] = targetCopy.concat(modifierSpans);\n    combinedList.sort((span1, span2) => {\n      return span1.start - span2.start;\n    });\n    return combinedList;\n  }\n\n  private convertTargetAndModifierSentenceSpansToWordSpans(sentenceSpans: (TargetSpan | ModifierSpan)[],\n                                                           wordMap: number[]): (TargetSpan | ModifierSpan)[] {\n    const convertedSpans: any = [];\n\n    for (const span of sentenceSpans) {\n      const startWord = wordMap[span.start];\n      let endWord = wordMap[span.end];\n      if (span.end >= wordMap.length) {\n        endWord = wordMap[wordMap.length - 1];\n      }\n      convertedSpans.push({start: startWord, end: endWord, id: span.id, type: span.type, polarity: span.polarity})\n    }\n    return convertedSpans\n  }\n\n  private extractWordsFromSpan(words: string[], span: Span) {\n    const extractedWords =[];\n    for (let i = span.start; i <= span.end; i++) {\n      extractedWords.push(words[i]);\n    }\n    return extractedWords.join(' ');\n  }\n\n  private findTargetOrModifierByID(id: number, targetsAndModifiers: TargetsAndModifiers){\n    for (let target of targetsAndModifiers.targets) {\n      if (target.id === id){\n        return target;\n      }\n    }\n    for (let modifier of targetsAndModifiers.modifiers) {\n      if (modifier.id === id){\n        return modifier;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/app/services/rb-sentence-parser.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/shah/Developer/NGJAMAVis/src/main.ts"],"sourceRoot":"webpack:///"}